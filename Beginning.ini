# Melody sequencer with 2 tracks
# LABELS: master=18
# INPUTS:
#  I1: [CLK In] External clock
#  I2: [RST In] Reset all sequences to step 1 on a gate or trigger here

# OUTPUTS:
#  O1: [V/O 1] Pitch CV output track 1
#  O2: [Velo 1] Modulation CV output track 1
#  O3: [V/O 2] Pitch CV output track 2
#  O4: [Velo 2] Modulation CV output track 2

# GATES ON MODULE 1:
#  G1.1: [Gate 1] Gate output track 1
#  G1.2: [Gate 2] Gate output track 2

# CONTROLLER 2:
#  P2.1: [RANGE/REPEAT] Arpeggio pitch range / Repeat note shift
#  P2.2: [BASE/RATCH] Arpeggio base pitch / Ratchet note shift
#  B2.1: [ROOT] Allow root note
#  B2.2: [3RD] Allow third note
#  B2.3: [5TH] Allow fifth note
#  B2.4: [7TH] Allow seventh note
#  B2.5: [9TH] Allow nineth note
#  B2.6: [11TH] Allow eleventh note
#  B2.7: [13TH] Allow thirtheenth note
#  B2.8: [CTRL] Switch some of the button functions

# CONTROLLER 3:
#  B3.4: [CLR] Short press: reset play mode, with CTRL: clear track, long press factory reset
#  B3.9: [ARP] Switch this track to arpeggio mode
#  B3.10: [LUCK] Randomly change step buttons, if Ctrl is held, change the gates instead.
#  B3.11: [RST] Reset current track (Ctrl: all track) to step 1 immediately
#  B3.13: [TON] Tonality menu
#  B3.14: [TRK] Track menu
#  B3.15: [PERF] Performance menu
#  B3.17: [RATC] Number of sub gates per clock
#  B3.18: [REP] Number of repeats, skip steps
#  B3.19: [PAT] Pattern for repeated gates
#  B3.20: [S/E] Set start and end (range of steps to play)
#  B3.21: [RAND] Pitch randomization
#  B3.22: [ACT] Set step activities
#  B3.23: [PROB] Gate probability
#  B3.25: [NOTE] Set motor faders to pitch
#  B3.26: [VELO] Velocity / Additional gate
#  B3.27: [GL] Gate length and glide
#  B3.29: [Track 1] Select track 1
#  B3.30: [Track 2] Select track 2

[s10]
[p2b8]
[b32]
[m4]
[m4]
[m4]
[m4]

# -------------------------------------------------
# Tonality
# -------------------------------------------------

# Set the root note (from C, C#, D, ... to C again)
[motorfader]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    fader = 1
    notches = 13
    ledcolor = 1.1
    ledvalue = 1
    output = _ROOT

# Set the musical scale
[motorfader]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    fader = 2
    notches = 12
    startvalue = 7
    ledcolor = _COLOR_DEGREE_FADER
    ledvalue = 1
    output = _DEGREE

# Select the color for the scale fader
[multicompare]
    input = _DEGREE
    compare1 = 0
    ifequal1 = 0.5
    compare2 = 1
    ifequal2 = 0.4
    compare3 = 2
    ifequal3 = 0.73
    compare4 = 6
    ifequal4 = 0.2
    compare5 = 7
    ifequal5 = 1.2
    compare6 = 9
    ifequal6 = 1.1
    else = 0
    output = _COLOR_DEGREE_FADER

# Global octave switch for all tracks
[motorfader]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    fader = 3
    notches = 5
    startvalue = 2
    ledcolor = 0.2
    ledvalue = _LED_GLOBAL_OCTAVE
    output = _GLOBAL_OCTAVE_SWITCH
    button = _RESET_OCTAVE_SWITCH
    clear = _RESET_OCTAVE_SWITCH

# Make the LED just a bit brighter if the switch is at neutral position
[compare]
    input = _GLOBAL_OCTAVE_SWITCH
    compare = 2
    ifequal = 1
    else = 0.3
    output = _LED_GLOBAL_OCTAVE

# Global diatonic transposition for all tracks
[motorfader]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    fader = 4
    notches = 15
    startvalue = 7
    ledcolor = 0.4
    ledvalue = _LED_GLOBAL_NOTESHIFT
    output = _GLOBAL_NOTESHIFT
    button = _RESET_NOTESHIFT
    clear = _RESET_NOTESHIFT

# Prevent the pitch to change between clock ticks
[sample]
    input = _GLOBAL_NOTESHIFT
    sample = _CLOCK
    output = _GLOBAL_NOTESHIFT_CLOCKED

# Make the LED just a bit brighter if the switch is at neutral position
[compare]
    input = _GLOBAL_NOTESHIFT
    compare = 7
    ifequal = 1
    else = 0.3
    output = _LED_GLOBAL_NOTESHIFT

# Global transposition by semitones for all tracks
[motorfader]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    fader = 5
    notches = 25
    startvalue = 12
    ledcolor = 0.85
    ledvalue = _LED_GLOBAL_TRANSPOSITION
    output = _GLOBAL_TRANSPOSITION
    button = _RESET_TRANSPOSITION
    clear = _RESET_TRANSPOSITION

# Make the LED just a bit brighter if the switch is at neutral position
[compare]
    input = _GLOBAL_TRANSPOSITION
    compare = 12
    ifequal = 1
    else = 0.3
    output = _LED_GLOBAL_TRANSPOSITION

# Global transposition by semitones for all tracks
[motorfader]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    fader = 6
    notches = 3
    startvalue = 0
    ledcolor = 0
    ledvalue = _TUNING_LED + 0.3
    output = _TUNING_COMPOSE

# Make tuning mode or compose mode active depending on the fader position.
[switch]
    input1 = 1
    offset = _TUNING_COMPOSE
    output2 = _COMPOSEMODE
    output3 = _TUNINGMODE

# Let the LED blink so that we are aware of the special mode
[lfo]
    hz = 5
    level = 0.7 * _TUNING_COMPOSE
    square = _TUNING_LED

# Glide length (duration of slides)
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
    selectat = 97
    fader = 7
    startvalue = 0.3
    ledcolor = 0.5
    ledvalue = 1
    output = _T1_GLIDE_LENGTH_FADER

# Make glide reasonably fast, make fader curve zoomed in in the short glide times.
[math]
    input1 = _T1_GLIDE_LENGTH_FADER * 0.5
    input2 = 3
    power = _T1_GLIDE_LENGTH

# Set the CV range for track 1
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
    selectat = 97
    fader = 8
    notches = 6
    startvalue = 1
    ledcolor = 0.65
    ledvalue = _TUNING_LED + 0.3
    output = _T1_CVRANGE

# Glide length (duration of slides)
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
    selectat = 194
    fader = 7
    startvalue = 0.3
    ledcolor = 0.5
    ledvalue = 1
    output = _T2_GLIDE_LENGTH_FADER

# Make glide reasonably fast, make fader curve zoomed in in the short glide times.
[math]
    input1 = _T2_GLIDE_LENGTH_FADER * 0.5
    input2 = 3
    power = _T2_GLIDE_LENGTH

# Set the CV range for track 2
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
    selectat = 194
    fader = 8
    notches = 6
    startvalue = 1
    ledcolor = 0.65
    ledvalue = _TUNING_LED + 0.3
    output = _T2_CVRANGE

# Disable faders that are not in use
[unusedfaders]
    select = _GLOBAL_FADER_SELECTION
    selectat = 97
    firstfader = 9
    numfaders = 8

# -------------------------------------------------
# Clocking
# -------------------------------------------------

# Detect an external clock signal, if within the last 2 seconds there was a trigger
[gatetool]
    inputtrigger = I1
    gatelength = 2
    outputgate = _EXTERNAL_CLOCK_PRESENT

# Select first avaiable clock in defined precedence order
[case]
    case1 = _EXTERNAL_CLOCK_PRESENT
    value1 = I1
    output = _CLOCK

# Pulses for changes via lucky buttons / lucky faders
[lfo]
    hz = 40
    square = _LUCKY_CLOCK

# Clock division 3/2 for the arpeggiators
[clocktool]
    clock = _CLOCK
    output = _CLOCK_3_2
    multiply = 3
    divide = 2

# Clock division 2/1 for the arpeggiators
[clocktool]
    clock = _CLOCK
    output = _CLOCK_2_1
    multiply = 2
    divide = 1

# Clock division 3/1 for the arpeggiators
[clocktool]
    clock = _CLOCK
    output = _CLOCK_3_1
    multiply = 3
    divide = 1

# Clock division 4/1 for the arpeggiators
[clocktool]
    clock = _CLOCK
    output = _CLOCK_4_1
    multiply = 4
    divide = 1

# Clock division 6/1 for the arpeggiators
[clocktool]
    clock = _CLOCK
    output = _CLOCK_6_1
    multiply = 6
    divide = 1

# Clock division 8/1 for the arpeggiators
[clocktool]
    clock = _CLOCK
    output = _CLOCK_8_1
    multiply = 8
    divide = 1

# -------------------------------------------------
# Global buttons
# -------------------------------------------------

# Drum Selection
[mixer]
    input1 = S1.1
    input2 = 1000
    output = _DRUM_SELECT

# Animation of track buttons when muted.
[lfo]
    level = 0.8
    bipolar = 0
    square = _MUTE_BLINK
    pulsewidth = 0.2
    hz = 2.5

# Mute button for track 1 (same as track button)
[button]
    select = _CONTROL
    button = B3.29
    led = L3.29
    output = _T1_MUTED

# Compute state of track LED based on wether it is selected and/or muted
[switch]
    offset = _T1_SELECTED * 2 + _T1_MUTED
    input1 = 0
    input2 = _MUTE_BLINK
    input3 = 1
    input4 = -1 * _MUTE_BLINK + 1
    output1 = _T1_TRACKLED

# Show mute state of track while CTRL is held
[compare]
    input = _CONTROL
    compare = 1
    ifequal = _T1_MUTED
    else = _T1_TRACKLED
    output = L3.29

# Mute button for track 2 (same as track button)
[button]
    select = _CONTROL
    button = B3.30
    led = L3.30
    output = _T2_MUTED

# Compute state of track LED based on wether it is selected and/or muted
[switch]
    offset = _T2_SELECTED * 2 + _T2_MUTED
    input1 = 0
    input2 = _MUTE_BLINK
    input3 = 1
    input4 = -1 * _MUTE_BLINK + 1
    output1 = _T2_TRACKLED

# Show mute state of track while CTRL is held
[compare]
    input = _CONTROL
    compare = 1
    ifequal = _T2_MUTED
    else = _T2_TRACKLED
    output = L3.30

# Track selection
[buttongroup]
    output = _SELECTED_TRACK
    select = _NO_CONTROL
    button1 = B3.29
    value1 = 1
    led1 = _T1_SELECTED
    button2 = B3.30
    value2 = 2
    led2 = _T2_SELECTED
    button3 = B3.31
    value3 = 3
    led3 = L3.31

# -------------------------------------------------
# Special menus
# -------------------------------------------------

# Select a global menu function of the faders. There is no button for "normal" in order to save
# buttons. Simply press the currently lit button to deactivate all menu buttons and go back
# to controlling the sequence.
[buttongroup]
    button1 = B3.13
    led1 = L3.13
    value1 = 97
    button2 = B3.14
    led2 = L3.14
    value2 = _SELECTED_TRACK + 10
    button3 = B3.15
    led3 = L3.15
    value3 = 98
    clear = _FADERMODE_CHANGED
    startbutton = 0
    minactive = 0
    maxactive = 1
    output = _GLOBAL_MENU

# If there is no menu active, the fader edit the sequence of the currently selected track.
[compare]
    input = _GLOBAL_MENU
    compare = 0
    ifequal = _SELECTED_TRACK
    else = _GLOBAL_MENU
    output = _GLOBAL_FADER_SELECTION

# A long press on the clear button resets all settings of the sequencer to its default state
[button]
    button = B3.4
    states = 1
    longpress = _FACTORY_RESET

# Do the factory reset
[droid]
    clearall = _FACTORY_RESET

# Provide state of the control button in a patch cable.
[copy]
    input = B2.8
    output = _CONTROL

# Inverted state of control button, is 1 of not held.
[copy]
    input = -1 * B2.8 + 1
    output = _NO_CONTROL

# Select the current mode of the faders for the sequencer
[buttongroup]
    button1 = B3.25
    led1 = L3.25
    value1 = 0
    button2 = B3.26
    led2 = L3.26
    value2 = 10
    button3 = B3.18
    led3 = L3.18
    value3 = 3
    button4 = B3.19
    led4 = L3.19
    value4 = 4
    button5 = B3.21
    led5 = L3.21
    value5 = 1
    button6 = B3.27
    led6 = L3.27
    value6 = 20
    button7 = B3.17
    led7 = L3.17
    value7 = 5
    button8 = B3.23
    led8 = L3.23
    value8 = 2
    button9 = B3.22
    led9 = L3.22
    value9 = 30
    buttonpress = _FADERMODE_CHANGED
    output = _FADERMODE

# Select a button mode that is most useful in the current fader mode
[multicompare]
    input = _FADERMODE
    compare1 = 3
    ifequal1 = 3
    compare2 = 4
    ifequal2 = 2
    else = 0
    output = _BM
    compare3 = 20
    ifequal3 = 20

# When the range button is active, it always has precedence
[compare]
    input = _RANGE
    compare = 0
    ifequal = _BM
    else = 1
    output = _BUTTONMODE

# Button for choosing between gates on/off and start/end
[button]
    button = B3.20
    led = L3.20
    states = 1
    output = _RANGE

# Button for reseting all tracks to step 1
[button]
    button = B3.11 * _CONTROL
    led = L3.11
    states = 1
    output = _RESET_BUTTON

# Combine all source of global reset
[mixer]
    input1 = _RESET_BUTTON
    input2 = I2
    output = _RESET

# -------------------------------------------------
# Track 1
# -------------------------------------------------

# Provide trigger when the clear button is pressed (no Ctrl needed)
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B3.4
    shortpress = _T1_CLEAR_BUTTON
    states = 1

# Clear button with control together clears the track
[copy]
    input = _T1_CLEAR_BUTTON * _CONTROL
    output = _T1_CLEAR

# Clear button without control removes all mode that alter the pattern length
[logic]
    input1 = _T1_CLEAR_BUTTON
    input2 = -1 * _CONTROL + 1
    and = _T1_PEACE

# Five blinks for the clear LED
[burst]
    trigger = _T1_CLEAR + _FACTORY_RESET
    hz = 5
    count = 5
    output = _T1_CLEAR_LED

# LED only blinks when track is selected
[select]
    select = _SELECTED_TRACK
    selectat = 1
    input = _T1_CLEAR_LED + 0.3
    output = L3.4

# Reset track immediately
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B3.11 * _NO_CONTROL
    states = 1
    output = _T1_RESET

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B3.10
    states = 1
    onvalue = _LUCKY_CLOCK
    output = _T1_LUCKY

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_AUTORESET
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T1_AUTORESET_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR + _T1_PEACE
    input2 = _T1_BPAR_1
    output = _T1_CLEAR_PAR

# Reset track after X clock ticks
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 17
    startvalue = 0
    ledcolor = 0.8
    ledvalue = _T1_AUTORESET_LED
    clear = _T1_CLEAR_PAR
    output = _T1_AUTORESET
    fader = 1
    button = _T1_BPAR_1

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_SHIFTSTEPS
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T1_SHIFTSTEPS_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR + _T1_PEACE
    input2 = _T1_BPSS_1
    output = _T1_CLEAR_PSS

# Shift the steps of the sequence by this number
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 17
    startvalue = 0
    ledcolor = 0.6
    ledvalue = _T1_SHIFTSTEPS_LED
    clear = _T1_CLEAR_PSS
    output = _T1_SHIFTSTEPS
    fader = 2
    button = _T1_BPSS_1

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_OCTAVE
    compare = 2
    ifequal = 1
    else = 0.3
    output = _T1_OCTAVE_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR
    input2 = _T1_BPOCT_1 + _T1_BPOCT_2
    output = _T1_CLEAR_POCT

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 5
    startvalue = 2
    ledcolor = 0.2
    ledvalue = _T1_OCTAVE_LED
    clear = _T1_CLEAR_POCT
    sharewithnext = 1
    fader = 3
    button = _T1_BPOCT_1

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
    notches = 5
    startvalue = 2
    ledcolor = 0.2
    ledvalue = _T1_OCTAVE_LED
    clear = _T1_CLEAR_POCT
    select = _GLOBAL_FADER_SELECTION
    selectat = 98
    fader = 1
    button = _T1_BPOCT_2
    output = _T1_OCTAVE

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_NOTESHIFT
    compare = 7
    ifequal = 1
    else = 0.3
    output = _T1_NOTESHIFT_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR
    input2 = _T1_BPDT_1 + _T1_BPDT_2
    output = _T1_CLEAR_PDT

# Diatonic transposition
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 15
    startvalue = 7
    ledcolor = 0.4
    ledvalue = _T1_NOTESHIFT_LED
    clear = _T1_CLEAR_PDT
    sharewithnext = 1
    fader = 4
    button = _T1_BPDT_1

# Diatonic transposition
[motorfader]
    notches = 15
    startvalue = 7
    ledcolor = 0.4
    ledvalue = _T1_NOTESHIFT_LED
    clear = _T1_CLEAR_PDT
    select = _GLOBAL_FADER_SELECTION
    selectat = 98
    fader = 2
    button = _T1_BPDT_2
    output = _T1_NOTESHIFT

# Prevent diatonic transposition from happending between clock ticks
[sample]
    input = _T1_NOTESHIFT
    sample = _CLOCK
    output = _T1_NOTESHIFT_CLOCKED

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_ACTIVITY
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T1_ACTIVITY_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR
    input2 = _T1_BPACT_1
    output = _T1_CLEAR_PACT

# Minimum activity a step needs to have to be played
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 8
    startvalue = 0
    ledcolor = 0.55
    ledvalue = _T1_ACTIVITY_LED
    clear = _T1_CLEAR_PACT
    output = _T1_ACTIVITY
    fader = 5
    button = _T1_BPACT_1

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_PATTERN_FADER
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T1_PATTERN_FADER_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR + _T1_PEACE
    input2 = _T1_BPPAT_1
    output = _T1_CLEAR_PPAT

# Movement pattern: normal, reverse, ping pong, >><, 2><, etc.
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 10
    startvalue = 0
    ledcolor = 0.3
    ledvalue = _T1_PATTERN_FADER_LED
    clear = _T1_CLEAR_PPAT
    output = _T1_PATTERN_FADER
    fader = 6
    button = _T1_BPPAT_1

# Set the direction to reverse on fader position 1
[compare]
    input = _T1_PATTERN_FADER
    compare = 1
    ifequal = 1
    output = _T1_DIRECTION

# Enable ping pong on fader position 2
[compare]
    input = _T1_PATTERN_FADER
    compare = 2
    ifequal = 1
    output = _T1_PINGPONG

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_CD_EVEN
    compare = 3
    ifequal = 1
    else = 0.3
    output = _T1_CD_EVEN_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR
    input2 = _T1_BPCDEVEN_1
    output = _T1_CLEAR_PCDEVEN

# Clock division for even divides/multipliers
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 7
    startvalue = 3
    ledcolor = 1.1
    ledvalue = _T1_CD_EVEN_LED
    clear = _T1_CLEAR_PCDEVEN
    output = _T1_CD_EVEN
    fader = 7
    button = _T1_BPCDEVEN_1

# Select the multiplier based on the fader position
[switch]
    input1 = 1
    input2 = 1
    input3 = 1
    input4 = 1
    input5 = 2
    input6 = 4
    input7 = 8
    offset = _T1_CD_EVEN
    output1 = _T1_CD_EVEN_MULT

# Select the division based on the fader position
[switch]
    input1 = 8
    input2 = 4
    input3 = 2
    input4 = 1
    input5 = 1
    input6 = 1
    input7 = 1
    offset = _T1_CD_EVEN
    output1 = _T1_CD_EVEN_DIV

# Make LED brighter if the fader is in its default position
[compare]
    input = _T1_CD_ODD
    compare = 3
    ifequal = 1
    else = 0.3
    output = _T1_CD_ODD_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T1_CLEAR
    input2 = _T1_BPCDODD_1
    output = _T1_CLEAR_PCDODD

# Clock division for odd divides/multipliers
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    notches = 7
    startvalue = 3
    ledcolor = 1.2
    ledvalue = _T1_CD_ODD_LED
    clear = _T1_CLEAR_PCDODD
    output = _T1_CD_ODD
    fader = 8
    button = _T1_BPCDODD_1

# Select the multiplier based on the fader position
[switch]
    input1 = 1
    input2 = 1
    input3 = 1
    input4 = 1
    input5 = 3
    input6 = 5
    input7 = 7
    offset = _T1_CD_ODD
    output1 = _T1_CD_ODD_MULT

# Select the division based on the fader position
[switch]
    input1 = 7
    input2 = 5
    input3 = 3
    input4 = 1
    input5 = 1
    input6 = 1
    input7 = 1
    offset = _T1_CD_ODD
    output1 = _T1_CD_ODD_DIV

# Disable faders that are not in use
[unusedfaders]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
    selectat = 11
    firstfader = 9
    numfaders = 8

# Switch on/off arpeggio mode for track 1
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B3.9
    led = L3.9
    output = _T1_ARP
    negated = _T1_ARP_OFF

# Auto reset arpeggiator after N number of steps
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 1
    notches = 17
    ledcolor = 0.8
    ledvalue = 1
    output = _T1_ARP_AUTORESET

# Enable ping pong mode
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 2
    notches = 3
    ledcolor = 0.85
    ledvalue = 1
    output = _T1_ARP_DIRECTION

# Provide gate for reversed direction of arpeggio
[compare]
    input = _T1_ARP_DIRECTION
    compare = 2
    ifequal = 1
    else = 0
    output = _T1_ARP_UPDOWN

# Provide gate for ping pong of arpeggio
[compare]
    input = _T1_ARP_DIRECTION
    compare = 1
    ifequal = 1
    else = 0
    output = _T1_ARP_PINGPONG

# Seperate octave switch for the arpeggio
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 3
    notches = 5
    ledcolor = 0.2
    startvalue = 2
    ledvalue = 1
    output = _T1_ARP_OCTAVE_SWITCH

# Enable butterfly mode
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 4
    notches = 2
    ledcolor = 1.15
    ledvalue = 1
    output = _T1_ARP_BUTTERFLY

# Select one of three octaving patterns
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 5
    notches = 3
    ledcolor = 0.4
    ledvalue = 1
    output = _T1_ARP_OCTAVING

# Compute octave offset pitches from fader setting
[copy]
    input = _T1_ARP_OCTAVE_SWITCH * 1V - 2V
    output = _T1_ARP_OCTAVE

# Select the arpeggio pattern
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 6
    notches = 7
    ledcolor = 0.3
    ledvalue = 1
    output = _T1_ARP_PATTERN

# Select one of four different drop patterns
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 7
    notches = 4
    ledcolor = 0.5
    ledvalue = 1
    output = _T1_ARP_DROP

# Select one of several clocking patterns
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    fader = 8
    notches = 8
    ledcolor = 1.1
    ledvalue = 1
    output = _T1_ARP_CLOCKING

# Disable faders that are not in use
[unusedfaders]
    select = _GLOBAL_FADER_SELECTION * _T1_ARP
    selectat = 11
    firstfader = 9
    numfaders = 8

# Select interval note 1 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.1
    led = L2.1
    startvalue = 1
    output = _T1_SEL_1

# Select interval note 2 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.2
    led = L2.2
    startvalue = 1
    output = _T1_SEL_2

# Select interval note 3 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.3
    led = L2.3
    startvalue = 1
    output = _T1_SEL_3

# Select interval note 4 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.4
    led = L2.4
    startvalue = 1
    output = _T1_SEL_4

# Select interval note 5 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.5
    led = L2.5
    startvalue = 1
    output = _T1_SEL_5

# Select interval note 6 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.6
    led = L2.6
    startvalue = 1
    output = _T1_SEL_6

# Select interval note 7 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 1
    button = B2.7
    led = L2.7
    startvalue = 1
    output = _T1_SEL_7

# Clock divider for track 1
[clocktool]
    clock = _CLOCK
    reset = _RESET
    divide = _T1_CD_EVEN_DIV * _T1_CD_ODD_DIV
    multiply = _T1_CD_EVEN_MULT * _T1_CD_ODD_MULT
    output = _T1_CLOCK

# Mix global and per-track diatonic transposition
[mixer]
    input1 = -1 * 7 + _T1_NOTESHIFT_CLOCKED
    input2 = -1 * 7 + _GLOBAL_NOTESHIFT_CLOCKED
    output = _T1_NOTESHIFT_SUM

[compare]
    input = _SELECTED_TRACK * _RANGE
    compare = 1
    ifequal = 1
    output = _T1_CLEAR_RANGE

# collect different sources of resetting the start/end point
[logic]
    input1 = _T1_CLEAR + _T1_PEACE
    input2 = _T1_CLEAR_RANGE * _CONTROL
    or = _T1_CLEARSTARTEND

# Note shift for each step repetition
[pot]
    select = _T1_ARP * 100 + _SELECTED_TRACK
    selectat = 1
    pot = P2.1
    discrete = 15
    startvalue = 7
    output = _T1_REPEATSHIFT

# Note shift for each ratchet
[pot]
    select = _T1_ARP * 100 + _SELECTED_TRACK
    selectat = 1
    pot = P2.2
    discrete = 15
    startvalue = 7
    output = _T1_RATCHETSHIFT

# Sequencer for pitch and gate of track 1
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 1
    clear = _T1_CLEAR
    select1 = _T1_SEL_1
    select3 = _T1_SEL_2
    select5 = _T1_SEL_3
    select7 = _T1_SEL_4
    select9 = _T1_SEL_5
    select11 = _T1_SEL_6
    select13 = _T1_SEL_7
    selectfill1 = 0
    selectfill2 = 0
    selectfill3 = 0
    selectfill4 = 0
    selectfill5 = 0
    degree = _DEGREE
    clock = _T1_CLOCK
    taptempo = _T1_CLOCK
    reset = _RESET + _T1_RESET
    cv = _T1_PITCH
    cvrange = _T1_CVRANGE * 1V + 1V
    defaultgate = 0
    gate = _T1_SEQUENCER_GATE
    numfaders = 16
    numsteps = 16
    linktonext = 1
    autoreset = _T1_AUTORESET
    shiftsteps = _T1_SHIFTSTEPS
    pattern = -1 * 2 + _T1_PATTERN_FADER
    direction = _T1_DIRECTION
    pingpong = _T1_PINGPONG
    selectnoteshift = _T1_NOTESHIFT_SUM
    tuningmode = _TUNINGMODE
    tuningpitch = _GLOBAL_OCTAVE_SWITCH * 1V
    accumulatorrange = 4
    root = _ROOT
    luckybuttons = _T1_LUCKY * _CONTROL
    luckyfaders = _T1_LUCKY * _NO_CONTROL
    luckychance = 1 / 16
    luckyamount = 0.5 * _NO_CONTROL + 0.5
    luckyscope = 3
    fadermode = _FADERMODE
    gatelength = _T1_GATELENGTH
    buttonmode = _BUTTONMODE
    composemode = _COMPOSEMODE
    clearskips = _T1_CLEAR + _T1_PEACE
    clearrepeats = _T1_CLEAR + _T1_PEACE
    clearstartend = _T1_CLEARSTARTEND
    repeatshift = -1 * 7 + _T1_REPEATSHIFT
    ratchetshift = -1 * 7 + _T1_RATCHETSHIFT

# Sequencer for velocity
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 1
    clear = _T1_CLEAR
    cv = _T1_VELOCITY
    cvrange = 1
    defaultcv = 0.5
    quantize = 0
    linktonext = 1

# Copy velocity to CV output
[copy]
    input = _T1_VELOCITY
    output = O2

# Sequencer for gate length and glide
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 1
    clear = _T1_CLEAR
    cv = _T1_GATELENGTH
    cvbase = 0.05
    cvrange = 0.9
    defaultcv = 0.5
    defaultgate = 0
    quantize = 0
    buttoncolor = 0.5
    linktonext = 1
    gate = _T1_GLIDE

# Sequencer for activity level per step
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 1
    clear = _T1_CLEAR
    cv = _T1_STEP_ACTIVITY
    quantize = 0
    defaultcv = 7
    cvnotches = 8

# Silence the gate if the step does not reach the required activity
[compare]
    input = _T1_STEP_ACTIVITY
    compare = _T1_ACTIVITY
    ifless = 0
    else = _T1_SEQUENCER_GATE
    output = _T1_ACT_GATE

# Modulate gate length for gate output in arpeggiator mode
[gatetool]
    taptempo = _T1_ARP_TAPTEMPO
    gatelength = _T1_GATELENGTH
    inputgate = _T1_ARP_CLOCK
    outputgate = _T1_ARP_MODULATED_GATE

# Switch gate to arpeggiator if active
[compare]
    input = _T1_ARP
    compare = 0
    ifequal = _T1_ACT_GATE
    else = _T1_ARP_MODULATED_GATE
    output = _T1_SWITCHED_GATE

# Logic for make the gate silent if the track is muted
[logic]
    input1 = -1 * _T1_MUTED + 1
    input2 = _T1_SWITCHED_GATE
    and = _T1_MUTED_GATE

# Select clock for arpeggiator of track 1. It is either the master clock or a multiplication
# of it, or the sequencer gate output.
[switch]
    input1 = _CLOCK
    input2 = _T1_SEQUENCER_GATE
    input3 = _CLOCK_3_2
    input4 = _CLOCK_2_1
    input5 = _CLOCK_3_1
    input6 = _CLOCK_4_1
    input7 = _CLOCK_6_1
    input8 = _CLOCK_8_1
    output1 = _T1_ARP_CLOCK
    offset = _T1_ARP_CLOCKING

# Create taptempo for arp clock to be used for gate length
[switch]
    input1 = _CLOCK
    input2 = _T1_CLOCK
    input3 = _CLOCK_3_2
    input4 = _CLOCK_2_1
    input5 = _CLOCK_3_1
    input6 = _CLOCK_4_1
    input7 = _CLOCK_6_1
    input8 = _CLOCK_8_1
    output1 = _T1_ARP_TAPTEMPO
    offset = _T1_ARP_CLOCKING * _T1_ARP

# Virtual pot for base pitch of arpeggiator
[pot]
    select = _T1_ARP * 100 + _SELECTED_TRACK
    selectat = 101
    pot = P2.2
    outputscale = 3V
    output = _T1_ARP_PITCH

# Virtual pot for pitch range of arpeggiator
[pot]
    select = _T1_ARP * 100 + _SELECTED_TRACK
    selectat = 101
    pot = P2.1
    outputscale = 4V
    output = _T1_ARP_RANGE

# Arpeggiator for track 1
[arpeggio]
    select1 = _T1_SEL_1
    select3 = _T1_SEL_2
    select5 = _T1_SEL_3
    select7 = _T1_SEL_4
    select9 = _T1_SEL_5
    select11 = _T1_SEL_6
    select13 = _T1_SEL_7
    selectfill1 = 0
    selectfill2 = 0
    selectfill3 = 0
    selectfill4 = 0
    selectfill5 = 0
    root = _ROOT
    degree = _DEGREE
    clock = _T1_ARP_CLOCK
    reset = _RESET
    tuningmode = _TUNINGMODE
    direction = _T1_ARP_UPDOWN
    pingpong = _T1_ARP_PINGPONG
    butterfly = _T1_ARP_BUTTERFLY
    octaves = _T1_ARP_OCTAVING
    drop = _T1_ARP_DROP
    pattern = _T1_ARP_PATTERN
    autoreset = _T1_ARP_AUTORESET
    pitch = _T1_ARP_PITCH
    range = _T1_ARP_RANGE
    output = _T1_ARP_OUTPUT

# Switch pitch output between sequencer and arpeggiator
[compare]
    input = _T1_ARP
    compare = 0
    ifequal = _T1_PITCH
    else = _T1_ARP_OUTPUT + _T1_ARP_OCTAVE
    output = _T1_SWITCHED_PITCH

# Mix all sources of pitch together
[mixer]
    input1 = _T1_OCTAVE * 1V - 2V
    input2 = _T1_SWITCHED_PITCH
    input3 = _GLOBAL_OCTAVE_SWITCH * 1V - 2V
    input4 = _GLOBAL_TRANSPOSITION * 0.00833333 - 1V
    output = _T1_FINAL_PITCH

# Slew limiter for glides
[slew]
    input = _T1_FINAL_PITCH
    exponential = O1
    slew = _T1_GLIDE * _T1_GLIDE_LENGTH

# Copy the gate to its final destination
[copy]
    input = _T1_MUTED_GATE
    output = _T1_FINAL_GATE

# Copy the gate signal to the CV jack
[copy]
    input = _T1_FINAL_GATE
    output = G1.1

# -------------------------------------------------
# Track 2
# -------------------------------------------------

# Provide trigger when the clear button is pressed (no Ctrl needed)
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B3.4
    shortpress = _T2_CLEAR_BUTTON
    states = 1

# Clear button with control together clears the track
[copy]
    input = _T2_CLEAR_BUTTON * _CONTROL
    output = _T2_CLEAR

# Clear button without control removes all mode that alter the pattern length
[logic]
    input1 = _T2_CLEAR_BUTTON
    input2 = -1 * _CONTROL + 1
    and = _T2_PEACE

# Five blinks for the clear LED
[burst]
    trigger = _T2_CLEAR + _FACTORY_RESET
    hz = 5
    count = 5
    output = _T2_CLEAR_LED

# LED only blinks when track is selected
[select]
    select = _SELECTED_TRACK
    selectat = 2
    input = _T2_CLEAR_LED + 0.3
    output = L3.4

# Reset track immediately
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B3.11 * _NO_CONTROL
    states = 1
    output = _T2_RESET

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B3.10
    states = 1
    onvalue = _LUCKY_CLOCK
    output = _T2_LUCKY

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_AUTORESET
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T2_AUTORESET_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR + _T2_PEACE
    input2 = _T2_BPAR_1
    output = _T2_CLEAR_PAR

# Reset track after X clock ticks
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 17
    startvalue = 0
    ledcolor = 0.8
    ledvalue = _T2_AUTORESET_LED
    clear = _T2_CLEAR_PAR
    output = _T2_AUTORESET
    fader = 1
    button = _T2_BPAR_1

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_SHIFTSTEPS
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T2_SHIFTSTEPS_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR + _T2_PEACE
    input2 = _T2_BPSS_1
    output = _T2_CLEAR_PSS

# Shift the steps of the sequence by this number
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 17
    startvalue = 0
    ledcolor = 0.6
    ledvalue = _T2_SHIFTSTEPS_LED
    clear = _T2_CLEAR_PSS
    output = _T2_SHIFTSTEPS
    fader = 2
    button = _T2_BPSS_1

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_OCTAVE
    compare = 2
    ifequal = 1
    else = 0.3
    output = _T2_OCTAVE_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR
    input2 = _T2_BPOCT_1 + _T2_BPOCT_2
    output = _T2_CLEAR_POCT

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 5
    startvalue = 2
    ledcolor = 0.2
    ledvalue = _T2_OCTAVE_LED
    clear = _T2_CLEAR_POCT
    sharewithnext = 1
    fader = 3
    button = _T2_BPOCT_1

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
    notches = 5
    startvalue = 2
    ledcolor = 0.2
    ledvalue = _T2_OCTAVE_LED
    clear = _T2_CLEAR_POCT
    select = _GLOBAL_FADER_SELECTION
    selectat = 98
    fader = 3
    button = _T2_BPOCT_2
    output = _T2_OCTAVE

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_NOTESHIFT
    compare = 7
    ifequal = 1
    else = 0.3
    output = _T2_NOTESHIFT_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR
    input2 = _T2_BPDT_1 + _T2_BPDT_2
    output = _T2_CLEAR_PDT

# Diatonic transposition
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 15
    startvalue = 7
    ledcolor = 0.4
    ledvalue = _T2_NOTESHIFT_LED
    clear = _T2_CLEAR_PDT
    sharewithnext = 1
    fader = 4
    button = _T2_BPDT_1

# Diatonic transposition
[motorfader]
    notches = 15
    startvalue = 7
    ledcolor = 0.4
    ledvalue = _T2_NOTESHIFT_LED
    clear = _T2_CLEAR_PDT
    select = _GLOBAL_FADER_SELECTION
    selectat = 98
    fader = 4
    button = _T2_BPDT_2
    output = _T2_NOTESHIFT

# Prevent diatonic transposition from happending between clock ticks
[sample]
    input = _T2_NOTESHIFT
    sample = _CLOCK
    output = _T2_NOTESHIFT_CLOCKED

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_ACTIVITY
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T2_ACTIVITY_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR
    input2 = _T2_BPACT_1
    output = _T2_CLEAR_PACT

# Minimum activity a step needs to have to be played
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 8
    startvalue = 0
    ledcolor = 0.55
    ledvalue = _T2_ACTIVITY_LED
    clear = _T2_CLEAR_PACT
    output = _T2_ACTIVITY
    fader = 5
    button = _T2_BPACT_1

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_PATTERN_FADER
    compare = 0
    ifequal = 1
    else = 0.3
    output = _T2_PATTERN_FADER_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR + _T2_PEACE
    input2 = _T2_BPPAT_1
    output = _T2_CLEAR_PPAT

# Movement pattern: normal, reverse, ping pong, >><, 2><, etc.
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 10
    startvalue = 0
    ledcolor = 0.3
    ledvalue = _T2_PATTERN_FADER_LED
    clear = _T2_CLEAR_PPAT
    output = _T2_PATTERN_FADER
    fader = 6
    button = _T2_BPPAT_1

# Set the direction to reverse on fader position 1
[compare]
    input = _T2_PATTERN_FADER
    compare = 1
    ifequal = 1
    output = _T2_DIRECTION

# Enable ping pong on fader position 2
[compare]
    input = _T2_PATTERN_FADER
    compare = 2
    ifequal = 1
    output = _T2_PINGPONG

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_CD_EVEN
    compare = 3
    ifequal = 1
    else = 0.3
    output = _T2_CD_EVEN_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR
    input2 = _T2_BPCDEVEN_1
    output = _T2_CLEAR_PCDEVEN

# Clock division for even divides/multipliers
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 7
    startvalue = 3
    ledcolor = 1.1
    ledvalue = _T2_CD_EVEN_LED
    clear = _T2_CLEAR_PCDEVEN
    output = _T2_CD_EVEN
    fader = 7
    button = _T2_BPCDEVEN_1

# Select the multiplier based on the fader position
[switch]
    input1 = 1
    input2 = 1
    input3 = 1
    input4 = 1
    input5 = 2
    input6 = 4
    input7 = 8
    offset = _T2_CD_EVEN
    output1 = _T2_CD_EVEN_MULT

# Select the division based on the fader position
[switch]
    input1 = 8
    input2 = 4
    input3 = 2
    input4 = 1
    input5 = 1
    input6 = 1
    input7 = 1
    offset = _T2_CD_EVEN
    output1 = _T2_CD_EVEN_DIV

# Make LED brighter if the fader is in its default position
[compare]
    input = _T2_CD_ODD
    compare = 3
    ifequal = 1
    else = 0.3
    output = _T2_CD_ODD_LED

# Combine all triggers for clearing
[mixer]
    input1 = _T2_CLEAR
    input2 = _T2_BPCDODD_1
    output = _T2_CLEAR_PCDODD

# Clock division for odd divides/multipliers
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    notches = 7
    startvalue = 3
    ledcolor = 1.2
    ledvalue = _T2_CD_ODD_LED
    clear = _T2_CLEAR_PCDODD
    output = _T2_CD_ODD
    fader = 8
    button = _T2_BPCDODD_1

# Select the multiplier based on the fader position
[switch]
    input1 = 1
    input2 = 1
    input3 = 1
    input4 = 1
    input5 = 3
    input6 = 5
    input7 = 7
    offset = _T2_CD_ODD
    output1 = _T2_CD_ODD_MULT

# Select the division based on the fader position
[switch]
    input1 = 7
    input2 = 5
    input3 = 3
    input4 = 1
    input5 = 1
    input6 = 1
    input7 = 1
    offset = _T2_CD_ODD
    output1 = _T2_CD_ODD_DIV

# Disable faders that are not in use
[unusedfaders]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
    selectat = 12
    firstfader = 9
    numfaders = 8

# Switch on/off arpeggio mode for track 2
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B3.9
    led = L3.9
    output = _T2_ARP
    negated = _T2_ARP_OFF

# Auto reset arpeggiator after N number of steps
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 1
    notches = 17
    ledcolor = 0.8
    ledvalue = 1
    output = _T2_ARP_AUTORESET

# Enable ping pong mode
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 2
    notches = 3
    ledcolor = 0.85
    ledvalue = 1
    output = _T2_ARP_DIRECTION

# Provide gate for reversed direction of arpeggio
[compare]
    input = _T2_ARP_DIRECTION
    compare = 2
    ifequal = 1
    else = 0
    output = _T2_ARP_UPDOWN

# Provide gate for ping pong of arpeggio
[compare]
    input = _T2_ARP_DIRECTION
    compare = 1
    ifequal = 1
    else = 0
    output = _T2_ARP_PINGPONG

# Seperate octave switch for the arpeggio
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 3
    notches = 5
    ledcolor = 0.2
    startvalue = 2
    ledvalue = 1
    output = _T2_ARP_OCTAVE_SWITCH

# Enable butterfly mode
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 4
    notches = 2
    ledcolor = 1.15
    ledvalue = 1
    output = _T2_ARP_BUTTERFLY

# Select one of three octaving patterns
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 5
    notches = 3
    ledcolor = 0.4
    ledvalue = 1
    output = _T2_ARP_OCTAVING

# Compute octave offset pitches from fader setting
[copy]
    input = _T2_ARP_OCTAVE_SWITCH * 1V - 2V
    output = _T2_ARP_OCTAVE

# Select the arpeggio pattern
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 6
    notches = 7
    ledcolor = 0.3
    ledvalue = 1
    output = _T2_ARP_PATTERN

# Select one of four different drop patterns
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 7
    notches = 4
    ledcolor = 0.5
    ledvalue = 1
    output = _T2_ARP_DROP

# Select one of several clocking patterns
[motorfader]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    fader = 8
    notches = 8
    ledcolor = 1.1
    ledvalue = 1
    output = _T2_ARP_CLOCKING

# Disable faders that are not in use
[unusedfaders]
    select = _GLOBAL_FADER_SELECTION * _T2_ARP
    selectat = 12
    firstfader = 9
    numfaders = 8

# Select interval note 1 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.1
    led = L2.1
    startvalue = 1
    output = _T2_SEL_1

# Select interval note 2 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.2
    led = L2.2
    startvalue = 1
    output = _T2_SEL_2

# Select interval note 3 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.3
    led = L2.3
    startvalue = 1
    output = _T2_SEL_3

# Select interval note 4 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.4
    led = L2.4
    startvalue = 1
    output = _T2_SEL_4

# Select interval note 5 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.5
    led = L2.5
    startvalue = 1
    output = _T2_SEL_5

# Select interval note 6 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.6
    led = L2.6
    startvalue = 1
    output = _T2_SEL_6

# Select interval note 7 from the current scale
[button]
    select = _SELECTED_TRACK
    selectat = 2
    button = B2.7
    led = L2.7
    startvalue = 1
    output = _T2_SEL_7

# Clock divider for track 2
[clocktool]
    clock = _CLOCK
    reset = _RESET
    divide = _T2_CD_EVEN_DIV * _T2_CD_ODD_DIV
    multiply = _T2_CD_EVEN_MULT * _T2_CD_ODD_MULT
    output = _T2_CLOCK

# Mix global and per-track diatonic transposition
[mixer]
    input1 = -1 * 7 + _T2_NOTESHIFT_CLOCKED
    input2 = -1 * 7 + _GLOBAL_NOTESHIFT_CLOCKED
    output = _T2_NOTESHIFT_SUM

[compare]
    input = _SELECTED_TRACK * _RANGE
    compare = 2
    ifequal = 1
    output = _T2_CLEAR_RANGE

# collect different sources of resetting the start/end point
[logic]
    input1 = _T2_CLEAR + _T2_PEACE
    input2 = _T2_CLEAR_RANGE * _CONTROL
    or = _T2_CLEARSTARTEND

# Note shift for each step repetition
[pot]
    select = _T2_ARP * 100 + _SELECTED_TRACK
    selectat = 2
    pot = P2.1
    discrete = 15
    startvalue = 7
    output = _T2_REPEATSHIFT

# Note shift for each ratchet
[pot]
    select = _T2_ARP * 100 + _SELECTED_TRACK
    selectat = 2
    pot = P2.2
    discrete = 15
    startvalue = 7
    output = _T2_RATCHETSHIFT

# Sequencer for pitch and gate of track 2
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 2
    clear = _T2_CLEAR
    select1 = _T2_SEL_1
    select3 = _T2_SEL_2
    select5 = _T2_SEL_3
    select7 = _T2_SEL_4
    select9 = _T2_SEL_5
    select11 = _T2_SEL_6
    select13 = _T2_SEL_7
    selectfill1 = 0
    selectfill2 = 0
    selectfill3 = 0
    selectfill4 = 0
    selectfill5 = 0
    degree = _DEGREE
    clock = _T2_CLOCK
    taptempo = _T2_CLOCK
    reset = _RESET + _T2_RESET
    cv = _T2_PITCH
    cvrange = _T2_CVRANGE * 1V + 1V
    defaultgate = 0
    gate = _T2_SEQUENCER_GATE
    numfaders = 16
    numsteps = 16
    linktonext = 1
    autoreset = _T2_AUTORESET
    shiftsteps = _T2_SHIFTSTEPS
    pattern = -1 * 2 + _T2_PATTERN_FADER
    direction = _T2_DIRECTION
    pingpong = _T2_PINGPONG
    selectnoteshift = _T2_NOTESHIFT_SUM
    tuningmode = _TUNINGMODE
    tuningpitch = _GLOBAL_OCTAVE_SWITCH * 1V
    accumulatorrange = 4
    root = _ROOT
    luckybuttons = _T2_LUCKY * _CONTROL
    luckyfaders = _T2_LUCKY * _NO_CONTROL
    luckychance = 1 / 16
    luckyamount = 0.5 * _NO_CONTROL + 0.5
    luckyscope = 3
    fadermode = _FADERMODE
    gatelength = _T2_GATELENGTH
    buttonmode = _BUTTONMODE
    composemode = _COMPOSEMODE
    clearskips = _T2_CLEAR + _T2_PEACE
    clearrepeats = _T2_CLEAR + _T2_PEACE
    clearstartend = _T2_CLEARSTARTEND
    repeatshift = -1 * 7 + _T2_REPEATSHIFT
    ratchetshift = -1 * 7 + _T2_RATCHETSHIFT

# Sequencer for velocity
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 2
    clear = _T2_CLEAR
    cv = _T2_VELOCITY
    cvrange = 1
    defaultcv = 0.5
    quantize = 0
    linktonext = 1

# Copy velocity to CV output
[copy]
    input = _T2_VELOCITY
    output = O4

# Sequencer for gate length and glide
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 2
    clear = _T2_CLEAR
    cv = _T2_GATELENGTH
    cvbase = 0.05
    cvrange = 0.9
    defaultcv = 0.5
    defaultgate = 0
    quantize = 0
    buttoncolor = 0.5
    linktonext = 1
    gate = _T2_GLIDE

# Sequencer for activity level per step
[motoquencer]
    select = _GLOBAL_FADER_SELECTION
    selectat = 2
    clear = _T2_CLEAR
    cv = _T2_STEP_ACTIVITY
    quantize = 0
    defaultcv = 7
    cvnotches = 8

# Silence the gate if the step does not reach the required activity
[compare]
    input = _T2_STEP_ACTIVITY
    compare = _T2_ACTIVITY
    ifless = 0
    else = _T2_SEQUENCER_GATE
    output = _T2_ACT_GATE

# Modulate gate length for gate output in arpeggiator mode
[gatetool]
    taptempo = _T2_ARP_TAPTEMPO
    gatelength = _T2_GATELENGTH
    inputgate = _T2_ARP_CLOCK
    outputgate = _T2_ARP_MODULATED_GATE

# Switch gate to arpeggiator if active
[compare]
    input = _T2_ARP
    compare = 0
    ifequal = _T2_ACT_GATE
    else = _T2_ARP_MODULATED_GATE
    output = _T2_SWITCHED_GATE

# Logic for make the gate silent if the track is muted
[logic]
    input1 = -1 * _T2_MUTED + 1
    input2 = _T2_SWITCHED_GATE
    and = _T2_MUTED_GATE

# Select clock for arpeggiator of track 2. It is either the master clock or a multiplication
# of it, or the sequencer gate output.
[switch]
    input1 = _CLOCK
    input2 = _T2_SEQUENCER_GATE
    input3 = _CLOCK_3_2
    input4 = _CLOCK_2_1
    input5 = _CLOCK_3_1
    input6 = _CLOCK_4_1
    input7 = _CLOCK_6_1
    input8 = _CLOCK_8_1
    output1 = _T2_ARP_CLOCK
    offset = _T2_ARP_CLOCKING

# Create taptempo for arp clock to be used for gate length
[switch]
    input1 = _CLOCK
    input2 = _T2_CLOCK
    input3 = _CLOCK_3_2
    input4 = _CLOCK_2_1
    input5 = _CLOCK_3_1
    input6 = _CLOCK_4_1
    input7 = _CLOCK_6_1
    input8 = _CLOCK_8_1
    output1 = _T2_ARP_TAPTEMPO
    offset = _T2_ARP_CLOCKING * _T2_ARP

# Virtual pot for base pitch of arpeggiator
[pot]
    select = _T2_ARP * 100 + _SELECTED_TRACK
    selectat = 102
    pot = P2.2
    outputscale = 3V
    output = _T2_ARP_PITCH

# Virtual pot for pitch range of arpeggiator
[pot]
    select = _T2_ARP * 100 + _SELECTED_TRACK
    selectat = 102
    pot = P2.1
    outputscale = 4V
    output = _T2_ARP_RANGE

# Arpeggiator for track 2
[arpeggio]
    select1 = _T2_SEL_1
    select3 = _T2_SEL_2
    select5 = _T2_SEL_3
    select7 = _T2_SEL_4
    select9 = _T2_SEL_5
    select11 = _T2_SEL_6
    select13 = _T2_SEL_7
    selectfill1 = 0
    selectfill2 = 0
    selectfill3 = 0
    selectfill4 = 0
    selectfill5 = 0
    root = _ROOT
    degree = _DEGREE
    clock = _T2_ARP_CLOCK
    reset = _RESET
    tuningmode = _TUNINGMODE
    direction = _T2_ARP_UPDOWN
    pingpong = _T2_ARP_PINGPONG
    butterfly = _T2_ARP_BUTTERFLY
    octaves = _T2_ARP_OCTAVING
    drop = _T2_ARP_DROP
    pattern = _T2_ARP_PATTERN
    autoreset = _T2_ARP_AUTORESET
    pitch = _T2_ARP_PITCH
    range = _T2_ARP_RANGE
    output = _T2_ARP_OUTPUT

# Switch pitch output between sequencer and arpeggiator
[compare]
    input = _T2_ARP
    compare = 0
    ifequal = _T2_PITCH
    else = _T2_ARP_OUTPUT + _T2_ARP_OCTAVE
    output = _T2_SWITCHED_PITCH

# Mix all sources of pitch together
[mixer]
    input1 = _T2_OCTAVE * 1V - 2V
    input2 = _T2_SWITCHED_PITCH
    input3 = _GLOBAL_OCTAVE_SWITCH * 1V - 2V
    input4 = _GLOBAL_TRANSPOSITION * 0.00833333 - 1V
    output = _T2_FINAL_PITCH

# Slew limiter for glides
[slew]
    input = _T2_FINAL_PITCH
    exponential = O3
    slew = _T2_GLIDE * _T2_GLIDE_LENGTH

# Copy the gate to its final destination
[copy]
    input = _T2_MUTED_GATE
    output = _T2_FINAL_GATE

# Copy the gate signal to the CV jack
[copy]
    input = _T2_FINAL_GATE
    output = G1.2

# Disable faders that are not in use
[unusedfaders]
    select = _GLOBAL_FADER_SELECTION
    selectat = 98
    firstfader = 5
    numfaders = 12

# -------------------------------------------------
# Drum 1
# -------------------------------------------------

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
    select = _SELECTED_TRACK * _DRUM_SELECT
    selectat = 3000
    button = B3.10
    states = 1
    onvalue = _LUCKY_CLOCK
    output = _DRUM1_LUCKY

[motoquencer]
    luckybuttons = _DRUM1_LUCKY * _CONTROL
    luckyfaders = _DRUM1_LUCKY * _NO_CONTROL
    luckychance = 1 / 16
    luckyamount = 0.5 * _NO_CONTROL + 0.5
    luckyscope = 3
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3000
    select = _SELECTED_TRACK * _DRUM_SELECT
    gate = G2.1

# -------------------------------------------------
# Drum 2
# -------------------------------------------------

[motoquencer]
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3003
    select = _SELECTED_TRACK * _DRUM_SELECT
    gate = G2.2

# -------------------------------------------------
# Drum 3
# -------------------------------------------------

[motoquencer]
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3006
    select = _SELECTED_TRACK * _DRUM_SELECT
    gate = G2.3

# -------------------------------------------------
# Drum 4
# -------------------------------------------------

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
    select = _SELECTED_TRACK * _DRUM_SELECT
    selectat = 3009
    button = B3.10
    states = 1
    onvalue = _LUCKY_CLOCK
    output = _DRUM4_LUCKY

[motoquencer]
    luckybuttons = _DRUM4_LUCKY * _CONTROL
    luckyfaders = _DRUM4_LUCKY * _NO_CONTROL
    luckychance = 1 / 16
    luckyamount = 0.5 * _NO_CONTROL + 0.5
    luckyscope = 3
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    quantize = 0
    selectat = 3009
    select = _SELECTED_TRACK * _DRUM_SELECT
    cv = O5
    gate = G2.4

# -------------------------------------------------
# Drum 5
# -------------------------------------------------

[motoquencer]
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3012
    select = _SELECTED_TRACK * _DRUM_SELECT
    cv = O6
    gate = G2.5

# -------------------------------------------------
# Drum 6
# -------------------------------------------------

[motoquencer]
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3015
    select = _SELECTED_TRACK * _DRUM_SELECT
#   cv =
    gate = G2.6

# -------------------------------------------------
# Drum 7
# -------------------------------------------------

[motoquencer]
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3018
    select = _SELECTED_TRACK * _DRUM_SELECT
    cv = O7
    gate = G2.7

# -------------------------------------------------
# Drum 8
# -------------------------------------------------

[motoquencer]
    clearall = _FACTORY_RESET
    defaultgate = 0
    clock = _CLOCK
    selectat = 3021
    select = _SELECTED_TRACK * _DRUM_SELECT
    cv = O8
    gate = G2.8
