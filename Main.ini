# Main
# LABELS: master=18

# 

# INPUTS:
#  I1: [CLK In] External clock
#  I2: [RST In] Reset all sequences to step 1 on a gate or trigger here

# OUTPUTS:
#  O1: [V/O 1] Pitch CV output track 1
#  O2: [Velo 1] Modulation CV output track 1
#  O3: [V/O 2] Pitch CV output track 2
#  O4: [Velo 2] Modulation CV output track 2

# GATES ON MODULE 1:
#  G1.1: [Gate 1] Gate output track 1
#  G1.2: [Gate 2] Gate output track 2

# CONTROLLER 2:
#  P2.1: [RANGE/REPEAT] Arpeggio pitch range / Repeat note shift
#  P2.2: [BASE/RATCH] Arpeggio base pitch / Ratchet note shift
#  B2.1: [ROOT] Allow root note
#  B2.2: [3RD] Allow third note
#  B2.3: [5TH] Allow fifth note
#  B2.4: [7TH] Allow seventh note
#  B2.5: [9TH] Allow nineth note
#  B2.6: [11TH] Allow eleventh note
#  B2.7: [13TH] Allow thirtheenth note
#  B2.8: [CTRL] Switch some of the button functions

# CONTROLLER 3:
#  B3.4: [CLR] Short press: reset play mode, with CTRL: clear track, long press factory reset
#  B3.9: [ARP] Switch this track to arpeggio mode
#  B3.10: [LUCK] Randomly change step buttons, if Ctrl is held, change the gates instead.
#  B3.11: [RST] Reset current track (Ctrl: all track) to step 1 immediately
#  B3.13: [TON] Tonality menu
#  B3.14: [TRK] Track menu
#  B3.15: [PERF] Performance menu
#  B3.17: [RATC] Number of sub gates per clock
#  B3.18: [REP] Number of repeats, skip steps
#  B3.19: [PAT] Pattern for repeated gates
#  B3.20: [S/E] Set start and end (range of steps to play)
#  B3.21: [RAND] Pitch randomization
#  B3.22: [ACT] Set step activities
#  B3.23: [PROB] Gate probability
#  B3.25: [NOTE] Set motor faders to pitch
#  B3.26: [VELO] Velocity / Additional gate
#  B3.27: [GL] Gate length and glide
#  B3.29: [Track 1] Select track 1
#  B3.30: [Track 2] Select track 2

[s10]
[p2b8]
[b32]
[m4]
[m4]
[m4]
[m4]

# -------------------------------------------------
# Clocking
# -------------------------------------------------

# Pulses for changes via lucky buttons / lucky faders
[lfo]
hz = 40
square = _LUCKY_CLOCK

# Clock division 3/2 for the arpeggiators
[clocktool]
clock = _CLOCK
output = _CLOCK_3_2
multiply = 3
divide = 2

# Clock division 2/1 for the arpeggiators
[clocktool]
clock = _CLOCK
output = _CLOCK_2_1
multiply = 2
divide = 1

# Clock division 3/1 for the arpeggiators
[clocktool]
clock = _CLOCK
output = _CLOCK_3_1
multiply = 3
divide = 1

# Clock division 4/1 for the arpeggiators
[clocktool]
clock = _CLOCK
output = _CLOCK_4_1
multiply = 4
divide = 1

# Clock division 6/1 for the arpeggiators
[clocktool]
clock = _CLOCK
output = _CLOCK_6_1
multiply = 6
divide = 1

# Clock division 8/1 for the arpeggiators
[clocktool]
clock = _CLOCK
output = _CLOCK_8_1
multiply = 8
divide = 1

# -------------------------------------------------
# Global
# -------------------------------------------------

# A long press on the clear button resets all settings of the sequencer to its default state
[button]
button = B3.4
states = 1
longpress = _FACTORY_RESET
led = L3.4

# Factory Reset Blink
[burst]
trigger = _FACTORY_RESET
count = 4
hz = 4
output = L3.4

# Status Dump
[droid]
statusdump = B3.5

# Track selection
[buttongroup]
output = _SELECTED_TRACK
button1 = B3.29
value1 = 1
led1 = L3.29
button2 = B3.30
value2 = 2
led2 = L3.30
button3 = B3.31
value3 = 3
led3 = L3.31

# Drum selection
[buttongroup]
output = _DRUM_SELECT
select = _SELECTED_TRACK
selectat = 3
value1 = 0
value2 = 1
value3 = 2
value4 = 3
value5 = 4
value6 = 5
value7 = 6
value8 = 7
button1 = B2.1
button2 = B2.2
button3 = B2.3
button4 = B2.4
button5 = B2.5
button6 = B2.6
button7 = B2.7
button8 = B2.8
led1 = L2.1
led2 = L2.2
led3 = L2.3
led4 = L2.4
led5 = L2.5
led6 = L2.6
led7 = L2.7
led8 = L2.8

# Global Drum Mute Fader Switch
[motorfader]
select = _GLOBAL_FADER_SELECTION
fader = 5
selectat = 98
notches = 2
clear = _DRUM_GLOBAL_MUTED_BUTTON
output = _DRUM_GLOBAL_MUTED_FADER
ledcolor = 0.7
ledvalue = _DRUM_GLOBAL_MUTED_FADER
button = _DRUM_GLOBAL_MUTED_BUTTON

# Inverting fader value for switch
[math]
input1 = _DRUM_GLOBAL_MUTED_FADER
input2 = -1
product = _DRUM_GLOBAL_MUTED

# Build Up Fader
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 98
fader = 6
ledvalue = _BUILDUP
startvalue = 0.04
ledcolor = 0.7
clear = _BUILDUP_BUTTON
clearall = _FACTORY_RESET
output = _BUILDUP
button = _BUILDUP_BUTTON

# Build Up Fader Direct Out
[copy]
input = _BUILDUP
output = O8

# Drums Load Preset 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
button = B3.1 * _CONTROL
states = 1
onvalue = 1
output = _DRUMS_P1_LOAD

# Drums Save Preset 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
button = B3.1
states = 1
onvalue = 1
longpress = _DRUMS_P1_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _DRUMS_P1_SAVE
hz = 5
count = 5
output = _DRUMS_P1_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
input = _DRUMS_P1_SAVE_LED + 0.3
output = L3.1

# Drums Load Preset 2
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
button = B3.2 * _CONTROL
states = 1
onvalue = 2
output = _DRUMS_P2_LOAD

# Drums Load Preset 2
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
button = B3.2
states = 1
onvalue = 2
longpress = _DRUMS_P2_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _DRUMS_P2_SAVE
hz = 5
count = 5
output = _DRUMS_P2_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
input = _DRUMS_P2_SAVE_LED + 0.3
output = L3.2

# Drums Load Preset 3
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
button = B3.3 * _CONTROL
states = 1
onvalue = 3
output = _DRUMS_P3_LOAD

# Drums Load Preset 3
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
button = B3.3
states = 1
onvalue = 3
longpress = _DRUMS_P3_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _DRUMS_P3_SAVE
hz = 5
count = 5
output = _DRUMS_P3_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3 + _DRUM_OFFSET
input = _DRUMS_P3_SAVE_LED + 0.3
output = L3.3

# Create a trigger with the preset as value when any of the presets is loaded
[mixer]
input1 = _DRUMS_P1_LOAD
input2 = _DRUMS_P2_LOAD
input3 = _DRUMS_P3_LOAD
output = _DRUMS_LOAD_PRESET

# Create a trigger with the preset as value when any of the presets is saved
[mixer]
input1 = _DRUMS_P1_SAVE * 1
input2 = _DRUMS_P2_SAVE * 2
input3 = _DRUMS_P3_SAVE * 3
output = _DRUMS_SAVE_PRESET

# Clock for Drum Divider
[clocktool]
clock = _CLOCK
reset = _RESET
divide = 2
output = _DRUM_DIV_CLOCK

# Clock for Drum Multiplier
[clocktool]
clock = _CLOCK
reset = _RESET
multiply = 2
output = _DRUM_MULT_CLOCK

[midiout]
channel = 10
trs = 1
note1 = 35
notegate1 = _DRUM1_OUT_GATE
notegatevelocity1 = _DRUM1_VEL
note2 = 38
notegate2 = _DRUM2_OUT_GATE
notegatevelocity2 = _DRUM2_VEL
note3 = 35
#   notegate3 = _DRUM3_OUT_GATE
#   notegatevelocity3 = _DRUM3_VEL
note4 = 35
#   notegate4 = _DRUM4_OUT_GATE
#   notegatevelocity4 = _DRUM4_VEL
note5 = 35
#   notegate5 = _DRUM5_OUT_GATE
#   notegatevelocity5 = _DRUM5_VEL
note6 = 35
#   notegate6 = _DRUM6_OUT_GATE
#   notegatevelocity6 = _DRUM6_VEL
note7 = 35
#   notegate7 = _DRUM7_OUT_GATE
#   notegatevelocity7 = _DRUM7_VEL

# -------------------------------------------------
# Special menus
# -------------------------------------------------

# Mute For Track 1
[motorfader]
ledcolor = 0.95
clearall = _FACTORY_RESET
ledvalue = _T1_ON
select = _GLOBAL_MENU
fader = 1
notches = 2
startvalue = 1
selectat = 400
output = _T1_ON

# Mute For Track 2
[motorfader]
ledcolor = 0.95
clearall = _FACTORY_RESET
ledvalue = _T2_ON
select = _GLOBAL_MENU
fader = 2
notches = 2
startvalue = 1
selectat = 400
output = _T2_ON

# Mute For Drum 1
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM1_ON
select = _GLOBAL_MENU
fader = 3
notches = 2
selectat = 400
output = _DRUM1_ON

# Mute For Drum 2
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM2_ON
select = _GLOBAL_MENU
fader = 4
notches = 2
selectat = 400
output = _DRUM2_ON

# Mute For Drum 3
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM3_ON
select = _GLOBAL_MENU
fader = 5
notches = 2
selectat = 400
output = _DRUM3_ON

# Mute For Drum 4
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM4_ON
select = _GLOBAL_MENU
fader = 6
notches = 2
selectat = 400
output = _DRUM4_ON

# Mute For Drum 5
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM5_ON
select = _GLOBAL_MENU
fader = 7
notches = 2
selectat = 400
output = _DRUM5_ON

# Mute For Drum 6
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM6_ON
select = _GLOBAL_MENU
fader = 8
notches = 2
selectat = 400
output = _DRUM6_ON

# Mute For Drum 7
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM7_ON
select = _GLOBAL_MENU
fader = 9
notches = 2
selectat = 400
output = _DRUM7_ON

# Mute For Drum 8
[motorfader]
ledcolor = 0.95
startvalue = 1
clearall = _FACTORY_RESET
ledvalue = _DRUM8_ON
select = _GLOBAL_MENU
fader = 10
notches = 2
selectat = 400
output = _DRUM8_ON

[unusedfaders]
firstfader = 11
select = _GLOBAL_MENU
selectat = 400

# Drum Offset Select If Track Is On Drums
[compare]
input = _SELECTED_TRACK
compare = 3
ifless = 0
else = _DRUM_SELECT
output = _DRUM_OFFSET

# Menu Offset For Drums
[math]
input1 = 10
input2 = _DRUM_OFFSET
sum = _DRUM_MENU_OFFSET

# Select a global menu function of the faders.
[buttongroup]
button1 = B3.13
led1 = L3.13
value1 = 97
button2 = B3.14
led2 = L3.14
value2 = _SELECTED_TRACK + _DRUM_MENU_OFFSET
button3 = B3.15
led3 = L3.15
value3 = 98
button4 = B3.16
led4 = L3.16
value4 = 400
clear = _FADERMODE_CHANGED
startbutton = 0
minactive = 0
maxactive = 1
output = _GLOBAL_MENU

# If there is no menu active, the fader edit the sequence of the currently selected track.
[compare]
input = _GLOBAL_MENU
compare = 0
ifequal = _SELECTED_TRACK + _DRUM_OFFSET
else = _GLOBAL_MENU
output = _GLOBAL_FADER_SELECTION

# Do the factory reset
[droid]
clearall = _FACTORY_RESET

# Provide state of the control button in a patch cable.
[copy]
input = B3.32
output = _CONTROL

# Inverted state of control button, is 1 of not held.
[copy]
input = -1 * B3.32 + 1
output = _NO_CONTROL

# Select the current mode of the faders for the sequencer
[buttongroup]
button1 = B3.25
led1 = L3.25
value1 = 0
button2 = B3.26
led2 = L3.26
value2 = 10
button3 = B3.18
led3 = L3.18
value3 = 3
button4 = B3.19
led4 = L3.19
value4 = 4
button5 = B3.21
led5 = L3.21
value5 = 1
button6 = B3.27
led6 = L3.27
value6 = 20
button7 = B3.17
led7 = L3.17
value7 = 5
button8 = B3.23
led8 = L3.23
value8 = 2
button9 = B3.22
led9 = L3.22
value9 = 30
buttonpress = _FADERMODE_CHANGED
output = _FADERMODE

# Select a button mode that is most useful in the current fader mode
[multicompare]
input = _FADERMODE
compare1 = 3
ifequal1 = 3
compare2 = 4
ifequal2 = 2
else = 0
output = _BM
compare3 = 20
ifequal3 = 20

# When the range button is active, it always has precedence
[compare]
input = _RANGE
compare = 0
ifequal = _BM
else = 1
output = _BUTTONMODE

# Button for choosing between gates on/off and start/end
[button]
button = B3.20
led = L3.20
states = 1
output = _RANGE

# Combine all source of global reset
[mixer]
input2 = I2
output = _RESET

# -------------------------------------------------
# Tonality + BPM
# -------------------------------------------------

# Set the root note (from C, C#, D, ... to C again)
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 1
notches = 13
ledcolor = 1.1
ledvalue = 1
output = _ROOT

# Set the musical scale
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 2
notches = 12
startvalue = 7
ledcolor = _COLOR_DEGREE_FADER
ledvalue = 1
output = _DEGREE

# Select the color for the scale fader
[multicompare]
input = _DEGREE
compare1 = 0
ifequal1 = 0.5
compare2 = 1
ifequal2 = 0.4
compare3 = 2
ifequal3 = 0.73
compare4 = 6
ifequal4 = 0.2
compare5 = 7
ifequal5 = 1.2
compare6 = 9
ifequal6 = 1.1
else = 0
output = _COLOR_DEGREE_FADER

# Global octave switch for all tracks
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 3
notches = 5
startvalue = 2
ledcolor = 0.2
ledvalue = _LED_GLOBAL_OCTAVE
output = _GLOBAL_OCTAVE_SWITCH
button = _RESET_OCTAVE_SWITCH
clear = _RESET_OCTAVE_SWITCH

# Make the LED just a bit brighter if the switch is at neutral position
[compare]
input = _GLOBAL_OCTAVE_SWITCH
compare = 2
ifequal = 1
else = 0.3
output = _LED_GLOBAL_OCTAVE

# Global diatonic transposition for all tracks
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 4
notches = 15
startvalue = 7
ledcolor = 0.4
ledvalue = _LED_GLOBAL_NOTESHIFT
output = _GLOBAL_NOTESHIFT
button = _RESET_NOTESHIFT
clear = _RESET_NOTESHIFT

# Prevent the pitch to change between clock ticks
[sample]
input = _GLOBAL_NOTESHIFT
sample = _CLOCK
output = _GLOBAL_NOTESHIFT_CLOCKED

# Make the LED just a bit brighter if the switch is at neutral position
[compare]
input = _GLOBAL_NOTESHIFT
compare = 7
ifequal = 1
else = 0.3
output = _LED_GLOBAL_NOTESHIFT

# Global transposition by semitones for all tracks
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 5
notches = 25
startvalue = 12
ledcolor = 0.85
ledvalue = _LED_GLOBAL_TRANSPOSITION
output = _GLOBAL_TRANSPOSITION
button = _RESET_TRANSPOSITION
clear = _RESET_TRANSPOSITION

# Make the LED just a bit brighter if the switch is at neutral position
[compare]
input = _GLOBAL_TRANSPOSITION
compare = 12
ifequal = 1
else = 0.3
output = _LED_GLOBAL_TRANSPOSITION

# Global transposition by semitones for all tracks
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 6
notches = 3
startvalue = 0
ledcolor = 0
ledvalue = _TUNING_LED + 0.3
output = _TUNING_COMPOSE

# Make tuning mode or compose mode active depending on the fader position.
[switch]
input1 = 1
offset = _TUNING_COMPOSE
output2 = _COMPOSEMODE
output3 = _TUNINGMODE

# Let the LED blink so that we are aware of the special mode
[lfo]
hz = 5
level = 0.7 * _TUNING_COMPOSE
square = _TUNING_LED

# Glide length (duration of slides)
[motorfader]
select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
selectat = 97
fader = 7
startvalue = 0.3
ledcolor = 0.5
ledvalue = 1
output = _T1_GLIDE_LENGTH_FADER

# Make glide reasonably fast, make fader curve zoomed in in the short glide times.
[math]
input1 = _T1_GLIDE_LENGTH_FADER * 0.5
input2 = 3
power = _T1_GLIDE_LENGTH

# Set the CV range for track 1
[motorfader]
select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
selectat = 97
fader = 8
notches = 6
startvalue = 1
ledcolor = 0.65
ledvalue = _TUNING_LED + 0.3
output = _T1_CVRANGE

# Glide length (duration of slides)
[motorfader]
select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
selectat = 194
fader = 7
startvalue = 0.3
ledcolor = 0.5
ledvalue = 1
output = _T2_GLIDE_LENGTH_FADER

# Make glide reasonably fast, make fader curve zoomed in in the short glide times.
[math]
input1 = _T2_GLIDE_LENGTH_FADER * 0.5
input2 = 3
power = _T2_GLIDE_LENGTH

# Set the CV range for track 2
[motorfader]
select = _GLOBAL_FADER_SELECTION * _SELECTED_TRACK
selectat = 194
fader = 8
notches = 6
startvalue = 1
ledcolor = 0.65
ledvalue = _TUNING_LED + 0.3
output = _T2_CVRANGE

# Start / Stop
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 9
notches = 2
startvalue = 1
ledcolor = 0.2
ledvalue = _START_STOP
output = _START_STOP
button = _RESET_START_STOP
clear = _RESET_START_STOP
clearall = _FACTORY_RESET

# Clock Bend
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 10
output = _CLOCK_BEND_FADER
startvalue = 0.5
notches = 1
ledcolor = _CLOCK_BEND_COLOR
ledvalue = 1
button = _RESET_CLOCK_BEND
clear = _RESET_CLOCK_BEND

# Snap to the perfectly neutral position if the fader is almost there.
[pot]
pot = _CLOCK_BEND_FADER
notch = 0.01
output = _CLOCK_BEND

# Let the LED light bright if the bending alteration is exactly zero.
[compare]
input = _CLOCK_BEND
compare = 0.5
precision = 0
ifequal = 0.4
else = 0.8
output = _CLOCK_BEND_COLOR

# 100 BPM
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 11
notches = 3
startvalue = 1
ledcolor = 0.2
ledvalue = _CLOCK_BPM_100 * 0.1
output = _CLOCK_BPM_100
button = _RESET_100_BPM
clear = _RESET_100_BPM
clearall = _FACTORY_RESET

# 10 BPM
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 12
notches = 10
startvalue = 2
ledcolor = 0.2
ledvalue = _CLOCK_BPM_10 * 0.1
output = _CLOCK_BPM_10
button = _RESET_10_BPM
clear = _RESET_10_BPM
clearall = _FACTORY_RESET

# 1 BPM
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 97
fader = 13
notches = 10
startvalue = 0
ledcolor = 0.2
ledvalue = _CLOCK_BPM_1 * 0.1
output = _CLOCK_BPM_1
button = _RESET_1_BPM
clear = _RESET_1_BPM
clearall = _FACTORY_RESET

[unusedfaders]
select = _GLOBAL_FADER_SELECTION
selectat = 97
firstfader = 14
numfaders = 3

# Combine BPM Fader Amounts
[mixer]
input1 = _CLOCK_BPM_100 * 100
input2 = _CLOCK_BPM_10 * 10
input3 = _CLOCK_BPM_1
output = _CLOCK_BPM_UNMUTED

# Set the BPM to zero while the clock is muted.
[copy]
input = _CLOCK_BPM_UNMUTED * _START_STOP
output = _CLOCK_BPM

# Clock Hz Conversion
[copy]
input = _CLOCK_BPM / 15
output = _CLOCK_HZ

# 0 Hz, while the upper half is going to exactly double speed.
[pot]
pot = _CLOCK_BEND
lefthalfinv = _CLOCK_BEND_LINEAR
righthalf = _CLOCK_BEND_EXP

# The actual clock, use a very short pulse so we have essentially just triggers
[lfo]
hz = _CLOCK_HZ * _CLOCK_BEND_LINEAR
rate = _CLOCK_BEND_EXP * 1V
pulsewidth = 0.1
square = _CLOCK

# Output to dedicated clock output.
[copy]
input = _CLOCK
output = G1.3

# -------------------------------------------------
# Track 1
# -------------------------------------------------

# Track 1 Preset 1 Load
[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.1 * _CONTROL
states = 1
onvalue = 1
output = _T1_P1_LOAD

# Track 1 Preset 1 Save
[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.1
states = 1
onvalue = 1
longpress = _T1_P1_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _T1_P1_SAVE
hz = 5
count = 5
output = _T1_P1_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK
selectat = 1
input = _T1_P1_SAVE_LED + 0.3
output = L3.1

# Track 1 Preset 2 Load
[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.2 * _CONTROL
states = 1
onvalue = 2
output = _T1_P2_LOAD

# Track 1 Preset 2 Save
[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.2
states = 1
onvalue = 2
longpress = _T1_P2_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _T1_P2_SAVE
hz = 5
count = 5
output = _T1_P2_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK
selectat = 1
input = _T1_P2_SAVE_LED + 0.3
output = L3.2

[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.3 * _CONTROL
states = 1
onvalue = 3
output = _T1_P3_LOAD

[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.3
states = 1
onvalue = 3
longpress = _T1_P3_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _T1_P3_SAVE
hz = 5
count = 5
output = _T1_P3_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK
selectat = 1
input = _T1_P3_SAVE_LED + 0.3
output = L3.3

[mixer]
input1 = _T1_P1_LOAD
input2 = _T1_P2_LOAD
input3 = _T1_P3_LOAD
output = _T1_LOAD_PRESET

# Create a trigger with the preset as value when any of the presets is saved
[mixer]
input1 = _T1_P1_SAVE * 1
input2 = _T1_P2_SAVE * 2
input3 = _T1_P3_SAVE * 3
output = _T1_SAVE_PRESET

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _T1_LUCKY

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL
selectat = 1
button = B3.4
led = L3.4
states = 1
output = _TRACK1_CLEAR

# Reset track after X clock ticks
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 17
startvalue = 0
ledcolor = 0.8
output = _T1_AUTORESET
fader = 1

# Shift the steps of the sequence by this number
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 17
startvalue = 0
ledcolor = 0.6
output = _T1_SHIFTSTEPS
fader = 2

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 5
startvalue = 2
ledcolor = 0.2
sharewithnext = 1
fader = 3

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
clear = _TRACK1_CLEAR
notches = 5
startvalue = 2
ledcolor = 0.2
select = _GLOBAL_FADER_SELECTION
selectat = 98
fader = 1
output = _T1_OCTAVE

# Diatonic transposition
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 15
startvalue = 7
ledcolor = 0.4
sharewithnext = 1
fader = 4

# Diatonic transposition
[motorfader]
clear = _TRACK1_CLEAR
notches = 15
startvalue = 7
ledcolor = 0.4
select = _GLOBAL_FADER_SELECTION
selectat = 98
fader = 2
output = _T1_NOTESHIFT

# Prevent diatonic transposition from happending between clock ticks
[sample]
input = _T1_NOTESHIFT
sample = _CLOCK
output = _T1_NOTESHIFT_CLOCKED

# Minimum activity a step needs to have to be played
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 8
startvalue = 0
ledcolor = 0.55
output = _T1_ACTIVITY
fader = 5

# Movement pattern: normal, reverse, ping pong, >><, 2><, etc.
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 10
startvalue = 0
ledcolor = 0.3
output = _T1_PATTERN_FADER
fader = 6

# Set the direction to reverse on fader position 1
[compare]
input = _T1_PATTERN_FADER
compare = 1
ifequal = 1
output = _T1_DIRECTION

# Enable ping pong on fader position 2
[compare]
input = _T1_PATTERN_FADER
compare = 2
ifequal = 1
output = _T1_PINGPONG

# Timing Swing
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
notches = 11
startvalue = 0
ledcolor = 0.3
output = _T1_SWING_AMOUNT
fader = 7

# Disable faders that are not in use
[unusedfaders]
select = _GLOBAL_FADER_SELECTION * _T1_ARP_OFF
selectat = 11
firstfader = 10
numfaders = 7

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK
selectat = 1
clear = _TRACK1_CLEAR
button = B3.9
led = L3.9
output = _T1_ARP
negated = _T1_ARP_OFF

# Auto reset arpeggiator after N number of steps
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 1
notches = 17
ledcolor = 0.8
ledvalue = 1
output = _T1_ARP_AUTORESET

# Enable ping pong mode
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 2
notches = 3
ledcolor = 0.85
ledvalue = 1
output = _T1_ARP_DIRECTION

# Provide gate for reversed direction of arpeggio
[compare]
input = _T1_ARP_DIRECTION
compare = 2
ifequal = 1
else = 0
output = _T1_ARP_UPDOWN

# Provide gate for ping pong of arpeggio
[compare]
input = _T1_ARP_DIRECTION
compare = 1
ifequal = 1
else = 0
output = _T1_ARP_PINGPONG

# Seperate octave switch for the arpeggio
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 3
notches = 5
ledcolor = 0.2
startvalue = 2
ledvalue = 1
output = _T1_ARP_OCTAVE_SWITCH

# Enable butterfly mode
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 4
notches = 2
ledcolor = 1.15
ledvalue = 1
output = _T1_ARP_BUTTERFLY

# Select one of three octaving patterns
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 5
notches = 3
ledcolor = 0.4
ledvalue = 1
output = _T1_ARP_OCTAVING

# Compute octave offset pitches from fader setting
[copy]
input = _T1_ARP_OCTAVE_SWITCH * 1V - 2V
output = _T1_ARP_OCTAVE

# Select the arpeggio pattern
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 6
notches = 7
ledcolor = 0.3
ledvalue = 1
output = _T1_ARP_PATTERN

# Select one of four different drop patterns
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 7
notches = 4
ledcolor = 0.5
ledvalue = 1
output = _T1_ARP_DROP

# Select one of several clocking patterns
[motorfader]
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
fader = 8
notches = 8
ledcolor = 1.1
ledvalue = 1
output = _T1_ARP_CLOCKING

# Disable faders that are not in use
[unusedfaders]
select = _GLOBAL_FADER_SELECTION * _T1_ARP
selectat = 11
firstfader = 9
numfaders = 8

# Select interval note 1 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.1
led = L2.1
startvalue = 1
output = _T1_SEL_1

# Select interval note 2 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.2
led = L2.2
startvalue = 1
output = _T1_SEL_2

# Select interval note 3 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.3
led = L2.3
startvalue = 1
output = _T1_SEL_3

# Select interval note 4 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.4
led = L2.4
startvalue = 1
output = _T1_SEL_4

# Select interval note 5 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.5
led = L2.5
startvalue = 1
output = _T1_SEL_5

# Select interval note 6 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.6
led = L2.6
startvalue = 1
output = _T1_SEL_6

# Select interval note 7 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 1
button = B2.7
led = L2.7
startvalue = 1
output = _T1_SEL_7

# Clock divider for track 1
[clocktool]
clock = _CLOCK
reset = _RESET
divide = S1.1
output = _T1_SWITCHED_CLOCK

[timing]
clock = _T1_SWITCHED_CLOCK
timing1 = 0
timing2 = _T1_SWING_AMOUNT * 0.1
output = _T1_CLOCK

# Mix global and per-track diatonic transposition
[mixer]
input1 = -1 * 7 + _T1_NOTESHIFT_CLOCKED
input2 = -1 * 7 + _GLOBAL_NOTESHIFT_CLOCKED
output = _T1_NOTESHIFT_SUM

# Note shift for each step repetition
[pot]
select = _T1_ARP * 100 + _SELECTED_TRACK
selectat = 1
pot = P2.1
discrete = 15
startvalue = 7
output = _T1_REPEATSHIFT

# Note shift for each ratchet
[pot]
select = _T1_ARP * 100 + _SELECTED_TRACK
selectat = 1
pot = P2.2
discrete = 15
startvalue = 7
output = _T1_RATCHETSHIFT

# Sequencer for pitch and gate of track 1
[motoquencer]
loadpreset = _T1_LOAD_PRESET
savepreset = _T1_SAVE_PRESET
clear = _TRACK1_CLEAR
select = _GLOBAL_FADER_SELECTION
#   preset =
selectat = 1
select1 = _T1_SEL_1
select3 = _T1_SEL_2
select5 = _T1_SEL_3
select7 = _T1_SEL_4
select9 = _T1_SEL_5
select11 = _T1_SEL_6
select13 = _T1_SEL_7
selectfill1 = 0
selectfill2 = 0
selectfill3 = 0
selectfill4 = 0
selectfill5 = 0
degree = _DEGREE
clock = _T1_CLOCK
taptempo = _T1_CLOCK
reset = _RESET
cv = _T1_PITCH
cvrange = _T1_CVRANGE * 1V + 1V
defaultgate = 0
gate = _T1_SEQUENCER_GATE
numfaders = 16
numsteps = 16
linktonext = 1
autoreset = _T1_AUTORESET
shiftsteps = _T1_SHIFTSTEPS
pattern = -1 * 2 + _T1_PATTERN_FADER
direction = _T1_DIRECTION
pingpong = _T1_PINGPONG
selectnoteshift = _T1_NOTESHIFT_SUM
tuningmode = _TUNINGMODE
tuningpitch = _GLOBAL_OCTAVE_SWITCH * 1V
accumulatorrange = 4
root = _ROOT
luckybuttons = _T1_LUCKY * _CONTROL
luckyfaders = _T1_LUCKY * _NO_CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
fadermode = _FADERMODE
gatelength = _T1_GATELENGTH
buttonmode = _BUTTONMODE
composemode = _COMPOSEMODE
repeatshift = -1 * 7 + _T1_REPEATSHIFT
ratchetshift = -1 * 7 + _T1_RATCHETSHIFT

# Sequencer for velocity
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _TRACK1_CLEAR
selectat = 1
cv = _T1_VELOCITY
cvrange = 1
defaultcv = 0.5
holdcv = 0
quantize = 0
linktonext = 1

# Copy velocity to CV output
[copy]
input = _T1_VELOCITY
output = O2

# Sequencer for gate length and glide
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _TRACK1_CLEAR
selectat = 1
cv = _T1_GATELENGTH
cvbase = 0.05
cvrange = 0.9
defaultcv = 0.5
defaultgate = 0
quantize = 0
buttoncolor = 0.5
linktonext = 1
gate = _T1_GLIDE

# Sequencer for activity level per step
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _TRACK1_CLEAR
selectat = 1
cv = _T1_STEP_ACTIVITY
quantize = 0
defaultcv = 7
cvnotches = 8

# Silence the gate if the step does not reach the required activity
[compare]
input = _T1_STEP_ACTIVITY
compare = _T1_ACTIVITY
ifless = 0
else = _T1_SEQUENCER_GATE
output = _T1_ACT_GATE

# Modulate gate length for gate output in arpeggiator mode
[gatetool]
taptempo = _T1_ARP_TAPTEMPO
gatelength = _T1_GATELENGTH
inputgate = _T1_ARP_CLOCK
outputgate = _T1_ARP_MODULATED_GATE

# Switch gate to arpeggiator if active
[compare]
input = _T1_ARP
compare = 0
ifequal = _T1_ACT_GATE
else = _T1_ARP_MODULATED_GATE
output = _T1_SWITCHED_GATE

[switch]
input1 = 0
input2 = _T1_SWITCHED_GATE
offset = _T1_ON
output1 = _T1_MUTED_GATE

# Select clock for arpeggiator of track 1. It is either the master clock or a multiplication
# of it, or the sequencer gate output.
[switch]
input1 = _T1_CLOCK
input2 = _T1_SEQUENCER_GATE
input3 = _CLOCK_3_2
input4 = _CLOCK_2_1
input5 = _CLOCK_3_1
input6 = _CLOCK_4_1
input7 = _CLOCK_6_1
input8 = _CLOCK_8_1
output1 = _T1_ARP_CLOCK
offset = _T1_ARP_CLOCKING

# Create taptempo for arp clock to be used for gate length
[switch]
input1 = _CLOCK
input2 = _T1_CLOCK
input3 = _CLOCK_3_2
input4 = _CLOCK_2_1
input5 = _CLOCK_3_1
input6 = _CLOCK_4_1
input7 = _CLOCK_6_1
input8 = _CLOCK_8_1
output1 = _T1_ARP_TAPTEMPO
offset = _T1_ARP_CLOCKING * _T1_ARP

# Virtual pot for base pitch of arpeggiator
[pot]
select = _T1_ARP * 100 + _SELECTED_TRACK
selectat = 101
pot = P2.2
outputscale = 3V
output = _T1_ARP_PITCH

# Virtual pot for pitch range of arpeggiator
[pot]
select = _T1_ARP * 100 + _SELECTED_TRACK
selectat = 101
pot = P2.1
outputscale = 4V
output = _T1_ARP_RANGE

# Arpeggiator for track 1
[arpeggio]
select1 = _T1_SEL_1
select3 = _T1_SEL_2
select5 = _T1_SEL_3
select7 = _T1_SEL_4
select9 = _T1_SEL_5
select11 = _T1_SEL_6
select13 = _T1_SEL_7
selectfill1 = 0
selectfill2 = 0
selectfill3 = 0
selectfill4 = 0
selectfill5 = 0
root = _ROOT
degree = _DEGREE
clock = _T1_ARP_CLOCK
reset = _RESET
tuningmode = _TUNINGMODE
direction = _T1_ARP_UPDOWN
pingpong = _T1_ARP_PINGPONG
butterfly = _T1_ARP_BUTTERFLY
octaves = _T1_ARP_OCTAVING
drop = _T1_ARP_DROP
pattern = _T1_ARP_PATTERN
autoreset = _T1_ARP_AUTORESET
pitch = _T1_ARP_PITCH
range = _T1_ARP_RANGE
output = _T1_ARP_OUTPUT

# Switch pitch output between sequencer and arpeggiator
[compare]
input = _T1_ARP
compare = 0
ifequal = _T1_PITCH
else = _T1_ARP_OUTPUT + _T1_ARP_OCTAVE
output = _T1_SWITCHED_PITCH

# Mix all sources of pitch together
[mixer]
input1 = _T1_OCTAVE * 1V - 2V
input2 = _T1_SWITCHED_PITCH
input3 = _GLOBAL_OCTAVE_SWITCH * 1V - 2V
input4 = _GLOBAL_TRANSPOSITION * 0.00833333 - 1V
output = _T1_FINAL_PITCH

# Slew limiter for glides
[slew]
input = _T1_FINAL_PITCH
exponential = O1
slew = _T1_GLIDE * _T1_GLIDE_LENGTH

# Copy the gate signal to the CV jack
[copy]
input = _T1_MUTED_GATE
output = G1.1

# -------------------------------------------------
# Track 2
# -------------------------------------------------

[button]
select = _SELECTED_TRACK
selectat = 2
button = B3.1 * _CONTROL
states = 1
onvalue = 1
output = _T2_P1_LOAD

[button]
select = _SELECTED_TRACK
selectat = 2
button = B3.1
states = 1
onvalue = 1
longpress = _T2_P1_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _T2_P1_SAVE
hz = 5
count = 5
output = _T2_P1_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK
selectat = 2
input = _T2_P1_SAVE_LED + 0.3
output = L3.1

[button]
select = _SELECTED_TRACK
selectat = 2
button = B3.2 * _CONTROL
states = 1
onvalue = 2
output = _T2_P2_LOAD

[button]
select = _SELECTED_TRACK
selectat = 2
button = B3.2
states = 1
onvalue = 2
longpress = _T2_P2_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _T2_P2_SAVE
hz = 5
count = 5
output = _T2_P2_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK
selectat = 2
input = _T2_P2_SAVE_LED + 0.3
output = L3.2

[button]
select = _SELECTED_TRACK
selectat = 2
button = B3.3 * _CONTROL
states = 1
onvalue = 3
output = _T2_P3_LOAD

[button]
select = _SELECTED_TRACK
selectat = 1
button = B3.3
states = 1
onvalue = 3
longpress = _T2_P3_SAVE

# Five blinks for the LED of the preset button on saving
[burst]
trigger = _T2_P3_SAVE
hz = 5
count = 5
output = _T2_P3_SAVE_LED

# Write the save LED animation to the LED if the track is still selected.
[select]
select = _SELECTED_TRACK
selectat = 2
input = _T2_P3_SAVE_LED + 0.3
output = L3.3

[mixer]
input1 = _T2_P1_LOAD
input2 = _T2_P2_LOAD
input3 = _T2_P3_LOAD
output = _T2_LOAD_PRESET

# Create a trigger with the preset as value when any of the presets is saved
[mixer]
input1 = _T2_P1_SAVE * 1
input2 = _T2_P2_SAVE * 2
input3 = _T2_P3_SAVE * 3
output = _T2_SAVE_PRESET

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL
selectat = 2
button = B3.4
led = L3.4
states = 1
output = _TRACK2_CLEAR

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK
selectat = 2
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _T2_LUCKY

# Reset track after X clock ticks
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 17
startvalue = 0
ledcolor = 0.8
output = _T2_AUTORESET
fader = 1

# Shift the steps of the sequence by this number
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 17
startvalue = 0
ledcolor = 0.6
output = _T2_SHIFTSTEPS
fader = 2

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 5
startvalue = 2
ledcolor = 0.2
sharewithnext = 1
fader = 3

# Octave switch: -2, -1, 0, +1, +2
[motorfader]
clear = _TRACK2_CLEAR
notches = 5
startvalue = 2
ledcolor = 0.2
select = _GLOBAL_FADER_SELECTION
selectat = 98
fader = 3
output = _T2_OCTAVE

# Diatonic transposition
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 15
startvalue = 7
ledcolor = 0.4
sharewithnext = 1
fader = 4

# Diatonic transposition
[motorfader]
clear = _TRACK2_CLEAR
notches = 15
startvalue = 7
ledcolor = 0.4
select = _GLOBAL_FADER_SELECTION
selectat = 98
fader = 4
output = _T2_NOTESHIFT

# Prevent diatonic transposition from happending between clock ticks
[sample]
input = _T2_NOTESHIFT
sample = _CLOCK
output = _T2_NOTESHIFT_CLOCKED

# Minimum activity a step needs to have to be played
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 8
startvalue = 0
ledcolor = 0.55
output = _T2_ACTIVITY
fader = 5

# Movement pattern: normal, reverse, ping pong, >><, 2><, etc.
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 10
startvalue = 0
ledcolor = 0.3
output = _T2_PATTERN_FADER
fader = 6

# Set the direction to reverse on fader position 1
[compare]
input = _T2_PATTERN_FADER
compare = 1
ifequal = 1
output = _T2_DIRECTION

# Enable ping pong on fader position 2
[compare]
input = _T2_PATTERN_FADER
compare = 2
ifequal = 1
output = _T2_PINGPONG

# Track 2 Swing Amount
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
notches = 11
startvalue = 0
ledcolor = 0.3
output = _T2_SWING_AMOUNT
fader = 7

# Disable faders that are not in use
[unusedfaders]
select = _GLOBAL_FADER_SELECTION * _T2_ARP_OFF
selectat = 12
firstfader = 10
numfaders = 7

# Switch on/off arpeggio mode for track 2
[button]
select = _SELECTED_TRACK
selectat = 2
clear = _TRACK2_CLEAR
button = B3.9
led = L3.9
output = _T2_ARP
negated = _T2_ARP_OFF

# Auto reset arpeggiator after N number of steps
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 1
notches = 17
ledcolor = 0.8
ledvalue = 1
output = _T2_ARP_AUTORESET

# Enable ping pong mode
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 2
notches = 3
ledcolor = 0.85
ledvalue = 1
output = _T2_ARP_DIRECTION

# Provide gate for reversed direction of arpeggio
[compare]
input = _T2_ARP_DIRECTION
compare = 2
ifequal = 1
else = 0
output = _T2_ARP_UPDOWN

# Provide gate for ping pong of arpeggio
[compare]
input = _T2_ARP_DIRECTION
compare = 1
ifequal = 1
else = 0
output = _T2_ARP_PINGPONG

# Seperate octave switch for the arpeggio
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 3
notches = 5
ledcolor = 0.2
startvalue = 2
ledvalue = 1
output = _T2_ARP_OCTAVE_SWITCH

# Enable butterfly mode
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 4
notches = 2
ledcolor = 1.15
ledvalue = 1
output = _T2_ARP_BUTTERFLY

# Select one of three octaving patterns
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 5
notches = 3
ledcolor = 0.4
ledvalue = 1
output = _T2_ARP_OCTAVING

# Compute octave offset pitches from fader setting
[copy]
input = _T2_ARP_OCTAVE_SWITCH * 1V - 2V
output = _T2_ARP_OCTAVE

# Select the arpeggio pattern
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 6
notches = 7
ledcolor = 0.3
ledvalue = 1
output = _T2_ARP_PATTERN

# Select one of four different drop patterns
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 7
notches = 4
ledcolor = 0.5
ledvalue = 1
output = _T2_ARP_DROP

# Select one of several clocking patterns
[motorfader]
clear = _TRACK2_CLEAR
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
fader = 8
notches = 8
ledcolor = 1.1
ledvalue = 1
output = _T2_ARP_CLOCKING

# Disable faders that are not in use
[unusedfaders]
select = _GLOBAL_FADER_SELECTION * _T2_ARP
selectat = 12
firstfader = 9
numfaders = 8

# Select interval note 1 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.1
led = L2.1
startvalue = 1
output = _T2_SEL_1

# Select interval note 2 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.2
led = L2.2
startvalue = 1
output = _T2_SEL_2

# Select interval note 3 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.3
led = L2.3
startvalue = 1
output = _T2_SEL_3

# Select interval note 4 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.4
led = L2.4
startvalue = 1
output = _T2_SEL_4

# Select interval note 5 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.5
led = L2.5
startvalue = 1
output = _T2_SEL_5

# Select interval note 6 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.6
led = L2.6
startvalue = 1
output = _T2_SEL_6

# Select interval note 7 from the current scale
[button]
select = _SELECTED_TRACK
selectat = 2
button = B2.7
led = L2.7
startvalue = 1
output = _T2_SEL_7

# Clock divider for track 2
[clocktool]
clock = _CLOCK
reset = _RESET
divide = S1.2
output = _T2_SWITCHED_CLOCK

[timing]
clock = _T2_SWITCHED_CLOCK
timing1 = 0
timing2 = _T2_SWING_AMOUNT * 0.1
output = _T2_CLOCK

# Mix global and per-track diatonic transposition
[mixer]
input1 = -1 * 7 + _T2_NOTESHIFT_CLOCKED
input2 = -1 * 7 + _GLOBAL_NOTESHIFT_CLOCKED
output = _T2_NOTESHIFT_SUM

# Note shift for each step repetition
[pot]
select = _T2_ARP * 100 + _SELECTED_TRACK
selectat = 2
pot = P2.1
discrete = 15
startvalue = 7
output = _T2_REPEATSHIFT

# Note shift for each ratchet
[pot]
select = _T2_ARP * 100 + _SELECTED_TRACK
selectat = 2
pot = P2.2
discrete = 15
startvalue = 7
output = _T2_RATCHETSHIFT

# Sequencer for pitch and gate of track 2
[motoquencer]
loadpreset = _T2_LOAD_PRESET
savepreset = _T2_SAVE_PRESET
select = _GLOBAL_FADER_SELECTION
clear = _TRACK2_CLEAR
selectat = 2
select1 = _T2_SEL_1
select3 = _T2_SEL_2
select5 = _T2_SEL_3
select7 = _T2_SEL_4
select9 = _T2_SEL_5
select11 = _T2_SEL_6
select13 = _T2_SEL_7
selectfill1 = 0
selectfill2 = 0
selectfill3 = 0
selectfill4 = 0
selectfill5 = 0
degree = _DEGREE
clock = _T2_CLOCK
taptempo = _T2_CLOCK
reset = _RESET
cv = _T2_PITCH
cvrange = _T2_CVRANGE * 1V + 1V
defaultgate = 0
gate = _T2_SEQUENCER_GATE
numfaders = 16
numsteps = 16
linktonext = 1
autoreset = _T2_AUTORESET
shiftsteps = _T2_SHIFTSTEPS
pattern = -1 * 2 + _T2_PATTERN_FADER
direction = _T2_DIRECTION
pingpong = _T2_PINGPONG
selectnoteshift = _T2_NOTESHIFT_SUM
tuningmode = _TUNINGMODE
tuningpitch = _GLOBAL_OCTAVE_SWITCH * 1V
accumulatorrange = 4
root = _ROOT
luckybuttons = _T2_LUCKY * _CONTROL
luckyfaders = _T2_LUCKY * _NO_CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
fadermode = _FADERMODE
gatelength = _T2_GATELENGTH
buttonmode = _BUTTONMODE
composemode = _COMPOSEMODE
repeatshift = -1 * 7 + _T2_REPEATSHIFT
ratchetshift = -1 * 7 + _T2_RATCHETSHIFT

# Sequencer for velocity
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _TRACK2_CLEAR
selectat = 2
cv = _T2_VELOCITY
cvrange = 1
defaultcv = 0.5
holdcv = 0
quantize = 0
linktonext = 1

# Copy velocity to CV output
[copy]
input = _T2_VELOCITY
output = O4

# Sequencer for gate length and glide
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _TRACK2_CLEAR
selectat = 2
cv = _T2_GATELENGTH
cvbase = 0.05
cvrange = 0.9
defaultcv = 0.5
defaultgate = 0
quantize = 0
buttoncolor = 0.5
linktonext = 1
gate = _T2_GLIDE

# Sequencer for activity level per step
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _TRACK2_CLEAR
selectat = 2
cv = _T2_STEP_ACTIVITY
quantize = 0
defaultcv = 7
cvnotches = 8

# Silence the gate if the step does not reach the required activity
[compare]
input = _T2_STEP_ACTIVITY
compare = _T2_ACTIVITY
ifless = 0
else = _T2_SEQUENCER_GATE
output = _T2_ACT_GATE

# Modulate gate length for gate output in arpeggiator mode
[gatetool]
taptempo = _T2_ARP_TAPTEMPO
gatelength = _T2_GATELENGTH
inputgate = _T2_ARP_CLOCK
outputgate = _T2_ARP_MODULATED_GATE

# Switch gate to arpeggiator if active
[compare]
input = _T2_ARP
compare = 0
ifequal = _T2_ACT_GATE
else = _T2_ARP_MODULATED_GATE
output = _T2_SWITCHED_GATE

[switch]
input1 = 0
input2 = _T2_SWITCHED_GATE
offset = _T2_ON
output1 = _T2_MUTED_GATE

# Select clock for arpeggiator of track 2. It is either the master clock or a multiplication
# of it, or the sequencer gate output.
[switch]
input1 = _T2_CLOCK
input2 = _T2_SEQUENCER_GATE
input3 = _CLOCK_3_2
input4 = _CLOCK_2_1
input5 = _CLOCK_3_1
input6 = _CLOCK_4_1
input7 = _CLOCK_6_1
input8 = _CLOCK_8_1
output1 = _T2_ARP_CLOCK
offset = _T2_ARP_CLOCKING

# Create taptempo for arp clock to be used for gate length
[switch]
input1 = _CLOCK
input2 = _T2_CLOCK
input3 = _CLOCK_3_2
input4 = _CLOCK_2_1
input5 = _CLOCK_3_1
input6 = _CLOCK_4_1
input7 = _CLOCK_6_1
input8 = _CLOCK_8_1
output1 = _T2_ARP_TAPTEMPO
offset = _T2_ARP_CLOCKING * _T2_ARP

# Virtual pot for base pitch of arpeggiator
[pot]
select = _T2_ARP * 100 + _SELECTED_TRACK
selectat = 102
pot = P2.2
outputscale = 3V
output = _T2_ARP_PITCH

# Virtual pot for pitch range of arpeggiator
[pot]
select = _T2_ARP * 100 + _SELECTED_TRACK
selectat = 102
pot = P2.1
outputscale = 4V
output = _T2_ARP_RANGE

# Arpeggiator for track 2
[arpeggio]
select1 = _T2_SEL_1
select3 = _T2_SEL_2
select5 = _T2_SEL_3
select7 = _T2_SEL_4
select9 = _T2_SEL_5
select11 = _T2_SEL_6
select13 = _T2_SEL_7
selectfill1 = 0
selectfill2 = 0
selectfill3 = 0
selectfill4 = 0
selectfill5 = 0
root = _ROOT
degree = _DEGREE
clock = _T2_ARP_CLOCK
reset = _RESET
tuningmode = _TUNINGMODE
direction = _T2_ARP_UPDOWN
pingpong = _T2_ARP_PINGPONG
butterfly = _T2_ARP_BUTTERFLY
octaves = _T2_ARP_OCTAVING
drop = _T2_ARP_DROP
pattern = _T2_ARP_PATTERN
autoreset = _T2_ARP_AUTORESET
pitch = _T2_ARP_PITCH
range = _T2_ARP_RANGE
output = _T2_ARP_OUTPUT

# Switch pitch output between sequencer and arpeggiator
[compare]
input = _T2_ARP
compare = 0
ifequal = _T2_PITCH
else = _T2_ARP_OUTPUT + _T2_ARP_OCTAVE
output = _T2_SWITCHED_PITCH

# Mix all sources of pitch together
[mixer]
input1 = _T2_OCTAVE * 1V - 2V
input2 = _T2_SWITCHED_PITCH
input3 = _GLOBAL_OCTAVE_SWITCH * 1V - 2V
input4 = _GLOBAL_TRANSPOSITION * 0.00833333 - 1V
output = _T2_FINAL_PITCH

# Slew limiter for glides
[slew]
input = _T2_FINAL_PITCH
exponential = O3
slew = _T2_GLIDE * _T2_GLIDE_LENGTH

# Copy the gate signal to the CV jack
[copy]
input = _T2_MUTED_GATE
output = G1.2

# Disable faders that are not in use
[unusedfaders]
select = _GLOBAL_FADER_SELECTION
selectat = 98
firstfader = 7
numfaders = 10

# -------------------------------------------------
# Drum 1
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.3
output1 = _DRUM1_SWITCHED_CLOCK

[timing]
clock = _DRUM1_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM1_SWING_AMOUNT * 0.1
output = _DRUM1_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 3
button = B3.4
led = L3.4
states = 1
output = _DRUM1_CLEAR

[euklid]
clock = _DRUM1_CLOCK
reset = _RESET
length = _DRUM1_EUC_LENGTH
beats = _DRUM1_EUC_BEATS
offset = _DRUM1_EUC_OFFSET
output = _DRUM1_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 13
fader = 1
notches = 17
clear = _DRUM1_CLEAR
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM1_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 13
fader = 2
notches = 17
clear = _DRUM1_CLEAR
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM1_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 13
fader = 3
clear = _DRUM1_CLEAR
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM1_EUC_OFFSET

# Drum 1 Swing Amount
[motorfader]
clear = _DRUM1_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 13
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM1_SWING_AMOUNT

# Switch on/off Euclidean mode for Drum 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 3
clear = _DRUM1_CLEAR
button = B3.9
led = L3.9
output = _DRUM1_EUC
#   negated = _DRUM1_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM1_CLEAR
selectat = 3
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM1_LUCKY
led = L3.10

# Main Sequencer
[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
luckybuttons = _DRUM1_LUCKY * _CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
clear = _DRUM1_CLEAR
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM1_CLOCK
selectat = 3
select = _GLOBAL_FADER_SELECTION
gate = _DRUM1_GATE
linktonext = 1

# Sequencer for velocity
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM1_CLEAR
selectat = 3
cv = _DRUM1_VEL
cvrange = 1
defaultcv = 0.5
holdcv = 0
quantize = 0
linktonext = 0

# Switch between sequencer gates or euclidean gates
[switch]
input1 = _DRUM1_GATE
input2 = _DRUM1_EUC_GATE
offset = _DRUM1_EUC
output1 = _DRUM1_GATES

# Mute
[switch]
input1 = 0
input2 = _DRUM1_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM1_ON
output1 = _DRUM1_OUT_GATE

# -------------------------------------------------
# Drum 2
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.4
output1 = _DRUM2_SWITCHED_CLOCK

[timing]
clock = _DRUM2_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM2_SWING_AMOUNT * 0.1
output = _DRUM2_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 4
button = B3.4
led = L3.4
states = 1
output = _DRUM2_CLEAR

[euklid]
clock = _DRUM2_CLOCK
reset = _RESET
length = _DRUM2_EUC_LENGTH
beats = _DRUM2_EUC_BEATS
offset = _DRUM2_EUC_OFFSET
output = _DRUM2_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM2_CLEAR
selectat = 14
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM2_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 14
clear = _DRUM2_CLEAR
fader = 2
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM2_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 14
fader = 3
clear = _DRUM2_CLEAR
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM2_EUC_OFFSET

# Drum 2 Swing Amount
[motorfader]
clear = _DRUM2_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 14
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM2_SWING_AMOUNT

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 4
clear = _DRUM2_CLEAR
button = B3.9
led = L3.9
output = _DRUM2_EUC
#   negated = _DRUM2_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM2_CLEAR
selectat = 4
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM2_LUCKY
led = L3.10

[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
clear = _DRUM2_CLEAR
luckybuttons = _DRUM2_LUCKY * _CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM2_CLOCK
selectat = 4
select = _GLOBAL_FADER_SELECTION
gate = _DRUM2_GATE
linktonext = 1

# Sequencer for velocity
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM2_CLEAR
selectat = 4
cv = _DRUM2_VEL
cvrange = 1
defaultcv = 0.5
holdcv = 0
quantize = 0
linktonext = 0

[switch]
input1 = _DRUM2_GATE
input2 = _DRUM2_EUC_GATE
offset = _DRUM2_EUC
output1 = _DRUM2_GATES

[switch]
input1 = 0
input2 = _DRUM2_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM2_ON
output1 = _DRUM2_OUT_GATE

# -------------------------------------------------
# Drum 3
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.5
output1 = _DRUM3_SWITCHED_CLOCK

[timing]
clock = _DRUM3_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM3_SWING_AMOUNT * 0.1
output = _DRUM3_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 5
button = B3.4
led = L3.4
states = 1
output = _DRUM3_CLEAR

[euklid]
clock = _DRUM3_CLOCK
reset = _RESET
length = _DRUM3_EUC_LENGTH
beats = _DRUM3_EUC_BEATS
offset = _DRUM3_EUC_OFFSET
output = _DRUM3_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM3_CLEAR
selectat = 15
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM3_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 15
fader = 2
clear = _DRUM3_CLEAR
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM3_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 15
clear = _DRUM3_CLEAR
fader = 3
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM3_EUC_OFFSET

# Drum 3 Swing Amount
[motorfader]
clear = _DRUM3_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 15
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM3_SWING_AMOUNT

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM3_CLEAR
selectat = 5
button = B3.9
led = L3.9
output = _DRUM3_EUC
#   negated = _DRUM3_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM3_CLEAR
selectat = 5
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM3_LUCKY
led = L3.10

[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
luckybuttons = _DRUM3_LUCKY * _CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
clear = _DRUM3_CLEAR
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM3_CLOCK
selectat = 5
select = _GLOBAL_FADER_SELECTION
gate = _DRUM3_GATE

[switch]
input1 = _DRUM3_GATE
input2 = _DRUM3_EUC_GATE
offset = _DRUM3_EUC
output1 = _DRUM3_GATES

[switch]
input1 = 0
input2 = _DRUM3_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM3_ON
#   output1 = G2.3

# -------------------------------------------------
# Drum 4
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.6
output1 = _DRUM4_SWITCHED_CLOCK

[euklid]
clock = _DRUM4_CLOCK
reset = _RESET
length = _DRUM4_EUC_LENGTH
beats = _DRUM4_EUC_BEATS
offset = _DRUM4_EUC_OFFSET
output = _DRUM4_EUC_GATE

[timing]
clock = _DRUM4_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM4_SWING_AMOUNT * 0.1
output = _DRUM4_CLOCK

# Euclidean Length
[motorfader]
clear = _DRUM4_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 16
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM4_EUC_LENGTH

# Euclidean beats
[motorfader]
clear = _DRUM4_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 16
fader = 2
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM4_EUC_BEATS

# Euclidean Offset
[motorfader]
clear = _DRUM4_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 16
fader = 3
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM4_EUC_OFFSET

# Drum 4 Swing Amount
[motorfader]
clear = _DRUM4_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 16
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM4_SWING_AMOUNT

# Minimum activity a step needs to have to be played
[motorfader]
clear = _DRUM1_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 16
notches = 8
startvalue = 0
ledcolor = 0.55
output = _DRUM4_ACTIVITY
fader = 5

# Switch on/off euc mode for drum 4
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM4_CLEAR
selectat = 6
button = B3.9
led = L3.9
output = _DRUM4_EUC
#   negated = _DRUM4_EUC_OFF

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 6
button = B3.4
led = L3.4
states = 1
output = _DRUM4_CLEAR

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM4_CLEAR
selectat = 6
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM4_LUCKY
led = L3.10

# Main Sequencer
[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
clearall = _FACTORY_RESET
clock = _DRUM4_CLOCK
defaultgate = 0
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckybuttons = _DRUM4_LUCKY * _CONTROL
luckychance = 1 / 16
clear = _DRUM4_CLEAR
luckyfaders = _DRUM4_LUCKY * _NO_CONTROL
cvrange = 1
holdcv = 0
luckyscope = 3
quantize = 0
defaultcv = 0.5
select = _GLOBAL_FADER_SELECTION
selectat = 6
#   cv = _DRUM4_VEL
gate = _DRUM4_GATE
linktonext = 1

# Sequencer for velocity
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM4_CLEAR
selectat = 6
cv = _DRUM4_VEL
cvrange = 1
defaultcv = 0.5
holdcv = 0
quantize = 0
linktonext = 1

# Sequencer for gate length and glide
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM4_CLEAR
selectat = 6
#   cv = _T1_GATELENGTH
cvbase = 0.05
cvrange = 0.9
defaultcv = 0.5
defaultgate = 0
quantize = 0
buttoncolor = 0.5
linktonext = 1
#   gate = _T1_GLIDE

# Sequencer for activity level per step
[motoquencer]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM4_CLEAR
selectat = 6
cv = _DRUM4_STEP_ACTIVITY
quantize = 0
defaultcv = 7
cvnotches = 8

[compare]
input = _DRUM4_STEP_ACTIVITY
compare = _DRUM4_ACTIVITY
ifless = 0
else = _DRUM4_GATE
output = _DRUM4_ACT_GATE

[math]
input1 = _DRUM4_VEL
input2 = 0.5
product = O5

[switch]
input1 = _DRUM4_ACT_GATE
input2 = _DRUM4_EUC_GATE
offset = _DRUM4_EUC
output1 = _DRUM4_GATES

[switch]
input1 = 0
input2 = _DRUM4_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM4_ON
#   output1 = G2.4

# -------------------------------------------------
# Drum 5
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.7
output1 = _DRUM5_SWITCHED_CLOCK

[timing]
clock = _DRUM5_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM5_SWING_AMOUNT * 0.1
output = _DRUM5_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 7
button = B3.4
led = L3.4
states = 1
output = _DRUM5_CLEAR

[euklid]
clock = _DRUM5_CLOCK
reset = _RESET
length = _DRUM5_EUC_LENGTH
beats = _DRUM5_EUC_BEATS
offset = _DRUM5_EUC_OFFSET
output = _DRUM5_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM5_CLEAR
selectat = 17
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM5_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 17
clear = _DRUM5_CLEAR
fader = 2
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM5_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 17
fader = 3
clear = _DRUM5_CLEAR
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM5_EUC_OFFSET

# Drum 5 Swing Amount
[motorfader]
clear = _DRUM5_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 17
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM5_SWING_AMOUNT

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM5_CLEAR
selectat = 7
button = B3.9
led = L3.9
output = _DRUM5_EUC
#   negated = _DRUM5_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM5_CLEAR
selectat = 7
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM5_LUCKY
led = L3.10

[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
defaultcv = 0.1
quantize = 0
luckybuttons = _DRUM5_LUCKY * _CONTROL
luckyfaders = _DRUM5_LUCKY * _NO_CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
clear = _DRUM5_CLEAR
luckyscope = 3
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM5_CLOCK
selectat = 7
select = _GLOBAL_FADER_SELECTION
#   cv = O6
gate = _DRUM5_GATE

[switch]
input1 = _DRUM5_GATE
input2 = _DRUM5_EUC_GATE
offset = _DRUM5_EUC
output1 = _DRUM5_GATES

[switch]
input1 = 0
input2 = _DRUM5_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM5_ON
#   output1 = G2.5

# -------------------------------------------------
# Drum 6
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.8
output1 = _DRUM6_SWITCHED_CLOCK

[timing]
clock = _DRUM6_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM6_SWING_AMOUNT * 0.1
output = _DRUM6_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 8
button = B3.4
led = L3.4
states = 1
output = _DRUM6_CLEAR

[euklid]
clock = _DRUM6_CLOCK
reset = _RESET
length = _DRUM6_EUC_LENGTH
beats = _DRUM6_EUC_BEATS
offset = _DRUM6_EUC_OFFSET
output = _DRUM6_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM6_CLEAR
selectat = 18
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM6_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
selectat = 18
clear = _DRUM6_CLEAR
fader = 2
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM6_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM6_CLEAR
selectat = 18
fader = 3
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM6_EUC_OFFSET

# Drum 6 Swing Amount
[motorfader]
clear = _DRUM6_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 18
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM6_SWING_AMOUNT

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM6_CLEAR
selectat = 8
button = B3.9
led = L3.9
output = _DRUM6_EUC
#   negated = _DRUM6_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM6_CLEAR
selectat = 8
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM6_LUCKY
led = L3.10

[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
clear = _DRUM6_CLEAR
luckybuttons = _DRUM6_LUCKY * _CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM6_CLOCK
selectat = 8
select = _GLOBAL_FADER_SELECTION
gate = _DRUM6_GATE

[switch]
input1 = _DRUM6_GATE
input2 = _DRUM6_EUC_GATE
offset = _DRUM6_EUC
output1 = _DRUM6_GATES

[switch]
input1 = 0
input2 = _DRUM6_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM6_ON
#   output1 = G2.6

# -------------------------------------------------
# Drum 7
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.9
output1 = _DRUM7_SWITCHED_CLOCK

[timing]
clock = _DRUM7_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM7_SWING_AMOUNT * 0.1
output = _DRUM7_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 9
button = B3.4
led = L3.4
states = 1
output = _DRUM7_CLEAR

[euklid]
clock = _DRUM7_CLOCK
reset = _RESET
length = _DRUM7_EUC_LENGTH
beats = _DRUM7_EUC_BEATS
offset = _DRUM7_EUC_OFFSET
output = _DRUM7_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION * _DRUM7_EUC
clear = _DRUM7_CLEAR
selectat = 19
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM7_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM7_CLEAR
selectat = 19
fader = 2
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM7_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM7_CLEAR
selectat = 19
fader = 3
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM7_EUC_OFFSET

# Drum 7 Swing Amount
[motorfader]
clear = _DRUM7_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 19
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM7_SWING_AMOUNT

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
selectat = 9
clear = _DRUM7_CLEAR
button = B3.9
led = L3.9
output = _DRUM7_EUC
#   negated = _DRUM7_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM7_CLEAR
selectat = 9
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM7_LUCKY
led = L3.10

[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
clear = _DRUM7_CLEAR
defaultcv = 0.1
quantize = 0
luckybuttons = _DRUM7_LUCKY * _CONTROL
luckyfaders = _DRUM7_LUCKY * _NO_CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
luckyscope = 3
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM7_CLOCK
selectat = 9
select = _GLOBAL_FADER_SELECTION
gate = _DRUM7_GATE

[switch]
input1 = _DRUM7_GATE
input2 = _DRUM7_EUC_GATE
offset = _DRUM7_EUC
output1 = _DRUM7_GATES

[switch]
input1 = 0
input2 = _DRUM7_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM7_ON
#   output1 = G2.7

# -------------------------------------------------
# Drum 8
# -------------------------------------------------

[switch]
input1 = _DRUM_DIV_CLOCK
input2 = _CLOCK
input3 = _DRUM_MULT_CLOCK
offset = S1.10
output1 = _DRUM8_SWITCHED_CLOCK

[timing]
clock = _DRUM8_SWITCHED_CLOCK
timing1 = 0
timing2 = _DRUM8_SWING_AMOUNT * 0.1
output = _DRUM8_CLOCK

# Press Control + Clear to clear selected track
[button]
select = _SELECTED_TRACK * _CONTROL + _DRUM_OFFSET
selectat = 10
button = B3.4
led = L3.4
states = 1
output = _DRUM8_CLEAR

[euklid]
clock = _DRUM8_CLOCK
reset = _RESET
length = _DRUM8_EUC_LENGTH
beats = _DRUM8_EUC_BEATS
offset = _DRUM8_EUC_OFFSET
output = _DRUM8_EUC_GATE

# Euclidean Length
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM8_CLEAR
selectat = 20
fader = 1
notches = 17
ledcolor = 0.2
startvalue = 17
ledvalue = 1
output = _DRUM8_EUC_LENGTH

# Euclidean beats
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM8_CLEAR
selectat = 20
fader = 2
notches = 17
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM8_EUC_BEATS

# Euclidean Offset
[motorfader]
select = _GLOBAL_FADER_SELECTION
clear = _DRUM8_CLEAR
selectat = 20
fader = 3
notches = 9
ledcolor = 0.2
startvalue = 5
ledvalue = 1
output = _DRUM8_EUC_OFFSET

# Drum 8 Swing Amount
[motorfader]
clear = _DRUM8_CLEAR
select = _GLOBAL_FADER_SELECTION
selectat = 20
fader = 4
notches = 11
ledcolor = 0.2
startvalue = 0
ledvalue = 1
output = _DRUM8_SWING_AMOUNT

# Switch on/off arpeggio mode for track 1
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM8_CLEAR
selectat = 10
button = B3.9
led = L3.9
output = _DRUM8_EUC
#   negated = _DRUM8_EUC_OFF

# Hold to contiously step faders to random positions, hold with Ctrl to change buttons
[button]
select = _SELECTED_TRACK + _DRUM_OFFSET
clear = _DRUM8_CLEAR
selectat = 10
button = B3.10
states = 1
onvalue = _LUCKY_CLOCK
output = _DRUM8_LUCKY
led = L3.10

[motoquencer]
loadpreset = _DRUMS_LOAD_PRESET
savepreset = _DRUMS_SAVE_PRESET
buttonmode = _BUTTONMODE
fadermode = _FADERMODE
clear = _DRUM8_CLEAR
defaultcv = 0.05
quantize = 0
luckybuttons = _DRUM8_LUCKY * _CONTROL
luckyfaders = _DRUM8_LUCKY * _NO_CONTROL
luckychance = 1 / 16
luckyamount = 0.5 * _NO_CONTROL + 0.5
cvrange = 0.1
luckyscope = 3
clearall = _FACTORY_RESET
defaultgate = 0
clock = _DRUM8_CLOCK
selectat = 10
select = _GLOBAL_FADER_SELECTION
cv = O6
gate = _DRUM8_GATE

[switch]
input1 = _DRUM8_GATE
input2 = _DRUM8_EUC_GATE
offset = _DRUM8_EUC
output1 = _DRUM8_GATES

[switch]
input1 = 0
input2 = _DRUM8_GATES + _DRUM_GLOBAL_MUTED
offset = _DRUM8_ON
#   output1 = G2.8
